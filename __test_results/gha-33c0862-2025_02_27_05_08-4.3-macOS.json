{"results":[{"app_name":"000-all","status":"pass","result":"\n###\nRunning tests for app: 000-all\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | true                                                           \n✔ |          1 | true\n\n══ Results ═════════════════════════════════════════════════════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 000-all\n###"},{"app_name":"000-manual","status":"pass","result":"\n###\nRunning tests for app: 000-manual\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | true                                                           \n✔ |          1 | true\n\n══ Results ═════════════════════════════════════════════════════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nWay to go!\n\nStopping tests for app: 000-manual\n###"},{"app_name":"000-pkg-versions","status":"pass","result":"\n###\nRunning tests for app: 000-pkg-versions\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | true                                                           \n✔ |          1 | true\n\n══ Results ═════════════════════════════════════════════════════════════════════\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 000-pkg-versions\n###"},{"app_name":"001-hello","status":"pass","result":"\n###\nRunning tests for app: 001-hello\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [5.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | server                                                         \n✔ |          1 | server\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 001-hello\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:8230/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:09:31 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 001-hello\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [8.5s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 3 | SKIP 2 | PASS 9 ]\n\nStopping tests for app: 001-hello\n###"},{"app_name":"002-text","status":"pass","result":"\n###\nRunning tests for app: 002-text\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n✔ |   4      8 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.3 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 002-text\n###"},{"app_name":"003-reactivity","status":"pass","result":"\n###\nRunning tests for app: 003-reactivity\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠙ |   2      0 | mytest                                                         \n⠼ |   3      2 | mytest                                                         \n⠧ |   4      4 | mytest                                                         \n✔ |   4      6 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:4:3'): Migrated shinytest test: mytest.R\n! Shiny inputs and outputs should have unique HTML id values.\nℹ The following HTML id values are not unique:\n• caption\nℹ Do you have a Shiny input and output value with the same name?\nBacktrace:\n    ▆\n 1. └─AppDriver$new(...) at test-mytest.R:4:3\n 2.   └─shinytest2 (local) initialize(...)\n 3.     └─shinytest2:::app_initialize(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─shinytest2:::app_initialize_(self, private, ..., view = view)\n 6.         └─shinytest2:::app_check_unique_names(self, private)\n 7.           └─shinytest2:::app_warn(...)\n\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.9 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 003-reactivity\n###"},{"app_name":"004-mpg","status":"pass","result":"\n###\nRunning tests for app: 004-mpg\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n✔ |   4      8 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 004-mpg\n###"},{"app_name":"005-sliders","status":"pass","result":"\n###\nRunning tests for app: 005-sliders\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠹ |   5      8 | mytest                                                         \n✔ |   5     10 | mytest [3.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | server                                                         \n⠋ |          1 | server                                                         \n✔ |          4 | server\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.3 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 14 ]\n\nStopping tests for app: 005-sliders\n###"},{"app_name":"006-tabsets","status":"pass","result":"\n###\nRunning tests for app: 006-tabsets\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠹ |   5      8 | mytest                                                         \n⠴ |   6     10 | mytest                                                         \n⠇ |   7     12 | mytest                                                         \n⠙ |   8     14 | mytest                                                         \n⠼ |   9     16 | mytest                                                         \n✔ |   9     18 | mytest [3.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/009_.png'\n\nWarning ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/011_.png'\n\nWarning ('test-mytest.R:31:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/013_.png'\n\nWarning ('test-mytest.R:34:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/015_.png'\n\nWarning ('test-mytest.R:37:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/017_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.8 s\n\n[ FAIL 0 | WARN 9 | SKIP 0 | PASS 18 ]\n\nStopping tests for app: 006-tabsets\n###"},{"app_name":"007-widgets","status":"pass","result":"\n###\nRunning tests for app: 007-widgets\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n✔ |   4      8 | mytest [3.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:28:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 007-widgets\n###"},{"app_name":"008-html","status":"pass","result":"\n###\nRunning tests for app: 008-html\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [2.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.4 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 008-html\n###"},{"app_name":"009-upload","status":"pass","result":"\n###\nRunning tests for app: 009-upload\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [3.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.8 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\n🌈 Your tests are over the rainbow 🌈\n\nStopping tests for app: 009-upload\n###"},{"app_name":"010-download","status":"pass","result":"\n###\nRunning tests for app: 010-download\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠼ |   1      4 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠧ |   2      6 | mytest                                                         \n⠏ |   3      7 | mytest                                                         \n✔ |   3     10 | mytest [2.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/004_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/006_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.8 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 10 ]\n\nStopping tests for app: 010-download\n###"},{"app_name":"012-datatables","status":"pass","result":"\n###\nRunning tests for app: 012-datatables\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠙ |   4      8 | mytest                                                         \n✔ |   4      8 | mytest [6.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:43:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:47:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.2 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 012-datatables\n###"},{"app_name":"013-selectize","status":"pass","result":"\n###\nRunning tests for app: 013-selectize\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   2      1 | mytest                                                         \n⠼ |   3      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠧ |   4      4 | mytest                                                         \n✔ |   4      6 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:4:3'): Migrated shinytest test: mytest.R\n! Shiny inputs and outputs should have unique HTML id values.\nℹ The following HTML id values are not unique:\n• github\nℹ Do you have a Shiny input and output value with the same name?\nBacktrace:\n    ▆\n 1. └─AppDriver$new(...) at test-mytest.R:4:3\n 2.   └─shinytest2 (local) initialize(...)\n 3.     └─shinytest2:::app_initialize(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─shinytest2:::app_initialize_(self, private, ..., view = view)\n 6.         └─shinytest2:::app_check_unique_names(self, private)\n 7.           └─shinytest2:::app_warn(...)\n\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 013-selectize\n###"},{"app_name":"014-onflushed","status":"pass","result":"\n###\nRunning tests for app: 014-onflushed\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [4.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.6 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 014-onflushed\n###"},{"app_name":"016-knitr-pdf","status":"pass","result":"\n###\nRunning tests for app: 016-knitr-pdf\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   2      5 | mytest                                                         \n✔ |   2      6 | mytest [3.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.5 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 016-knitr-pdf\n###"},{"app_name":"017-select-vs-selectize","status":"pass","result":"\n###\nRunning tests for app: 017-select-vs-selectize\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 017-select-vs-selectize\n###"},{"app_name":"018-datatable-options","status":"pass","result":"\n###\nRunning tests for app: 018-datatable-options\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠹ |   5      8 | mytest                                                         \n✔ |   5     10 | mytest [5.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n\nWarning ('test-mytest.R:28:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.5 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 10 ]\n\nStopping tests for app: 018-datatable-options\n###"},{"app_name":"019-mathjax","status":"pass","result":"\n###\nRunning tests for app: 019-mathjax\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [7.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.9 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 019-mathjax\n###"},{"app_name":"020-knit-html","status":"pass","result":"\n###\nRunning tests for app: 020-knit-html\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [7.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.8 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 020-knit-html\n###"},{"app_name":"021-selectize-plot","status":"pass","result":"\n###\nRunning tests for app: 021-selectize-plot\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\n🧿 Your tests look perfect 🧿\n\nStopping tests for app: 021-selectize-plot\n###"},{"app_name":"022-unicode-chinese","status":"fail","result":"\n###\nRunning tests for app: 022-unicode-chinese\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n⠹ |          3 | mytest                                                         \n⠸ |          4 | mytest                                                         \n⠼ |          5 | mytest                                                         \n⠦ |          7 | mytest                                                         \n⠇ |          9 | mytest                                                         \n✔ |         10 | mytest [3.5s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 022-unicode-chinese\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:2284/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 022-unicode-chinese\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/022-unicode-chinese\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12d75a898> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 022-unicode-chinese - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/022-unicode-chinese - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.6 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 022-unicode-chinese - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/022-unicode-chinese - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 12 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 022-unicode-chinese\n###"},{"app_name":"023-optgroup-server","status":"pass","result":"\n###\nRunning tests for app: 023-optgroup-server\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [4.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:25:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.6 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 023-optgroup-server\n###"},{"app_name":"024-optgroup-selectize","status":"pass","result":"\n###\nRunning tests for app: 024-optgroup-selectize\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.6 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 024-optgroup-selectize\n###"},{"app_name":"025-loop-ui","status":"pass","result":"\n###\nRunning tests for app: 025-loop-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 025-loop-ui\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:23192/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:11:43 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 025-loop-ui\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [3.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 2 | SKIP 2 | PASS 6 ]\n\nStopping tests for app: 025-loop-ui\n###"},{"app_name":"026-shiny-inline","status":"fail","result":"\n###\nRunning tests for app: 026-shiny-inline\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n⠹ |          3 | mytest                                                         \n⠸ | 1        3 | mytest                                                         \n⠼ | 1        4 | mytest                                                         \n⠴ | 1        5 | mytest                                                         \n✖ | 1        5 | mytest [3.9s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.9 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:18:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 1 | WARN 0 | SKIP 0 | PASS 5 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 026-shiny-inline\n###"},{"app_name":"027-absolutely-positioned-panels","status":"fail","result":"\n###\nRunning tests for app: 027-absolutely-positioned-panels\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ | 1        0 | mytest                                                         \n⠙ | 2        0 | mytest                                                         \n⠹ | 3        0 | mytest                                                         \n⠸ | 4        0 | mytest                                                         \n✖ | 4        0 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:16:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:17:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:20:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:21:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/001.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:16:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:17:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:20:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:21:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 4 | WARN 0 | SKIP 0 | PASS 0 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 027-absolutely-positioned-panels\n###"},{"app_name":"032-client-data-and-query-string","status":"pass","result":"\n###\nRunning tests for app: 032-client-data-and-query-string\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [2.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 032-client-data-and-query-string\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:12963/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:12:00 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 032-client-data-and-query-string\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [4.7s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.9 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 1 | SKIP 2 | PASS 4 ]\n\nStopping tests for app: 032-client-data-and-query-string\n###"},{"app_name":"033-conditionalpanel-demo","status":"pass","result":"\n###\nRunning tests for app: 033-conditionalpanel-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [2.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 033-conditionalpanel-demo\n###"},{"app_name":"037-date-and-date-range","status":"pass","result":"\n###\nRunning tests for app: 037-date-and-date-range\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.4 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 037-date-and-date-range\n###"},{"app_name":"039-download-file","status":"pass","result":"\n###\nRunning tests for app: 039-download-file\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠧ |   2      6 | mytest                                                         \n✔ |   2      8 | mytest [2.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/004_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.8 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 039-download-file\n###"},{"app_name":"041-dynamic-ui","status":"fail","result":"\n###\nRunning tests for app: 041-dynamic-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ | 1        2 | mytest                                                         \n⠼ | 3        2 | mytest                                                         \n⠦ | 3        4 | mytest                                                         \n⠇ | 3        6 | mytest                                                         \n⠋ | 3        8 | mytest                                                         \n⠹ | 3       10 | mytest                                                         \n⠼ | 3       12 | mytest                                                         \n⠦ | 3       14 | mytest                                                         \n⠇ | 3       16 | mytest                                                         \n⠋ | 3       18 | mytest                                                         \n⠹ | 3       20 | mytest                                                         \n✖ | 3       21 | mytest [7.0s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:13:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:18:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.0 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/003.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:13:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/004.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:14:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/005.json' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_values() at test-mytest.R:18:3\n 2.   └─shinytest2:::app_expect_values(...)\n 3.     └─shinytest2:::app__expect_snapshot_file(...)\n 4.       ├─base::withCallingHandlers(...)\n 5.       └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 21 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 041-dynamic-ui\n###"},{"app_name":"047-image-output","status":"pass","result":"\n###\nRunning tests for app: 047-image-output\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n✔ |   3      6 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 047-image-output\n###"},{"app_name":"048-including-html-text-and-markdown-files","status":"pass","result":"\n###\nRunning tests for app: 048-including-html-text-and-markdown-files\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [2.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.2 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 048-including-html-text-and-markdown-files\n###"},{"app_name":"050-kmeans-example","status":"pass","result":"\n###\nRunning tests for app: 050-kmeans-example\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n✔ |   2      4 | mytest [2.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | server                                                         \n⠋ |          1 | server                                                         \n✔ |          3 | server\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.1 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 7 ]\n\nStopping tests for app: 050-kmeans-example\n###"},{"app_name":"051-movie-explorer","status":"pass","result":"\n###\nRunning tests for app: 051-movie-explorer\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n✔ |      1   0 | mytest\n\n══ Results ═════════════════════════════════════════════════════════════════════\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Can not consistently pass on all builds...there some sort of timing issue\n  where shinytest doesn't know how long to wait before taking a snapshot (1):\n  'test-mytest.R:5:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 051-movie-explorer\n###"},{"app_name":"054-nvd3-line-chart-output","status":"pass","result":"\n###\nRunning tests for app: 054-nvd3-line-chart-output\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [9.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.2 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 054-nvd3-line-chart-output\n###"},{"app_name":"060-retirement-simulation","status":"pass","result":"\n###\nRunning tests for app: 060-retirement-simulation\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n⠹ |          3 | mytest                                                         \n⠸ |          4 | mytest                                                         \n✔ |          4 | mytest [3.8s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.8 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 060-retirement-simulation\n###"},{"app_name":"061-server-to-client-custom-messages","status":"pass","result":"\n###\nRunning tests for app: 061-server-to-client-custom-messages\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.2 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 061-server-to-client-custom-messages\n###"},{"app_name":"062-submitbutton-demo","status":"pass","result":"\n###\nRunning tests for app: 062-submitbutton-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [2.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:27:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.9 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 062-submitbutton-demo\n###"},{"app_name":"063-superzip-example","status":"pass","result":"\n###\nRunning tests for app: 063-superzip-example\n\nLoading required package: shiny\nLoading required package: testthat\n\nAttaching package: ‘dplyr’\n\nThe following object is masked from ‘package:testthat’:\n\n    matches\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠙ |   4      8 | mytest                                                         \n✔ |   4      8 | mytest [14.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:28:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:40:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:51:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:66:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.6 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 063-superzip-example\n###"},{"app_name":"065-update-input-demo","status":"pass","result":"\n###\nRunning tests for app: 065-update-input-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.4 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 065-update-input-demo\n###"},{"app_name":"066-upload-file","status":"pass","result":"\n###\nRunning tests for app: 066-upload-file\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.3 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 066-upload-file\n###"},{"app_name":"081-widgets-gallery","status":"pass","result":"\n###\nRunning tests for app: 081-widgets-gallery\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠙ |   4      8 | mytest                                                         \n✔ |   4      8 | mytest [4.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:26:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:40:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:61:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.6 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 081-widgets-gallery\n###"},{"app_name":"082-word-cloud","status":"pass","result":"\n###\nRunning tests for app: 082-word-cloud\n\nLoading required package: shiny\nLoading required package: testthat\nLoading required package: NLP\nLoading required package: RColorBrewer\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n✔ |   4      8 | mytest [4.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:27:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.9 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nWoot!\n\nStopping tests for app: 082-word-cloud\n###"},{"app_name":"108-module-output","status":"pass","result":"\n###\nRunning tests for app: 108-module-output\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n✔ |   1      2 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.3 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 108-module-output\n###"},{"app_name":"109-render-table","status":"pass","result":"\n###\nRunning tests for app: 109-render-table\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠙ |   4      8 | mytest                                                         \n✔ |   4      8 | mytest [3.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 109-render-table\n###\nWarning messages:\n1: In readLines(f, n) :\n  incomplete final line found on '/Users/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'\n2: In readLines(f, n) :\n  incomplete final line found on '/Users/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'\n3: In readLines(f, n) :\n  incomplete final line found on '/Users/runner/work/shinycoreci/shinycoreci/inst/apps/109-render-table/DESCRIPTION'"},{"app_name":"110-error-sanitization","status":"pass","result":"\n###\nRunning tests for app: 110-error-sanitization\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n✔ |   4      8 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 110-error-sanitization\n###"},{"app_name":"111-insert-ui","status":"pass","result":"\n###\nRunning tests for app: 111-insert-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:15:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\nStopping tests for app: 111-insert-ui\n###"},{"app_name":"112-generate-report","status":"pass","result":"\n###\nRunning tests for app: 112-generate-report\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      4 | mytest [3.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 112-generate-report\n###"},{"app_name":"114-modal-dialog","status":"pass","result":"\n###\nRunning tests for app: 114-modal-dialog\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n✔ |   4      8 | mytest [4.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:30:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.2 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 114-modal-dialog\n###"},{"app_name":"115-remove-modal","status":"pass","result":"\n###\nRunning tests for app: 115-remove-modal\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [4.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.1 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\n🥳\n\nStopping tests for app: 115-remove-modal\n###"},{"app_name":"117-shinythemes","status":"pass","result":"\n###\nRunning tests for app: 117-shinythemes\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n⠼ |          5 | mytest                                                         \n⠦ |          7 | mytest                                                         \n✔ |          8 | mytest [8.9s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.9 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 117-shinythemes\n###"},{"app_name":"118-highcharter-births","status":"pass","result":"\n###\nRunning tests for app: 118-highcharter-births\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [7.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.4 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 118-highcharter-births\n###"},{"app_name":"119-namespaced-conditionalpanel-demo","status":"fail","result":"\n###\nRunning tests for app: 119-namespaced-conditionalpanel-demo\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ | 1        1 | mytest                                                         \n⠹ | 1        2 | mytest                                                         \n⠼ | 1        4 | mytest                                                         \n✖ | 2        4 | mytest [4.4s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | server                                                         \n⠋ |          1 | server                                                         \n✔ |          3 | server\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.7 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:13:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/006.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:23:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 2 | WARN 0 | SKIP 0 | PASS 7 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 119-namespaced-conditionalpanel-demo\n###"},{"app_name":"121-async-timer","status":"pass","result":"\n###\nRunning tests for app: 121-async-timer\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 121-async-timer\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:31473/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:14:57 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 121-async-timer\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [27.9s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 27.9 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 0 | SKIP 2 | PASS 2 ]\n\nStopping tests for app: 121-async-timer\n###"},{"app_name":"122-async-outputs","status":"pass","result":"\n###\nRunning tests for app: 122-async-outputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |         20 | mytest [6.1s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 122-async-outputs\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:6565/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:15:31 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\ntrying URL 'https://www.google.com/images/logo.gif'\nContent type 'image/gif' length 8558 bytes\n==================================================\ndownloaded 8558 bytes\n\nshinyjster - stopping app: 122-async-outputs\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [7.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 13.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 0 | SKIP 2 | PASS 22 ]\n\nStopping tests for app: 122-async-outputs\n###"},{"app_name":"123-async-renderprint","status":"pass","result":"\n###\nRunning tests for app: 123-async-renderprint\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [3.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 123-async-renderprint\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:38410/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:15:42 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 123-async-renderprint\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [3.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 1 | SKIP 2 | PASS 4 ]\n\nStopping tests for app: 123-async-renderprint\n###"},{"app_name":"124-async-download","status":"pass","result":"\n###\nRunning tests for app: 124-async-download\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n✔ |      1   0 | mytest\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 124-async-download\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:35429/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:15:45 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\n\n⠋ |   1      0 | shinyjster                                                       132: stop\n  131: onFulfilled [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download/app.R#125]\n  129: onFulfilled\n  127: onFulfilled\n  125: onFulfilled\n  123: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: func\n  115: contextFunc\n  114: .getReactiveEnvironment()$runWith\n  113: onFulfilled\n  111: onFulfilled\n  109: callback\n  106: <Anonymous>\n  105: onFulfilled\n   95: f\n   94: FUN\n   93: lapply\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n  190: domain$wrapOnFulfilled\n  189: promiseDomain$onThen\n  188: action\n  181: promise\n  180: promise$then\n  179: then\n  178: %...>%\n  177: download$func [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download/app.R#122]\n  152: contextFunc\n  151: env$runWith\n  140: Context$new(getDefaultReactiveDomain(), \"[download]\")$run\n  139: shinysession$handleRequest\n  134: handler\n  133: handler\n  132: handlers$invoke\n  100: handler\n   99: func\n   98: compute\n   93: rookCall\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠙ |   2      0 | shinyjster                                                       132: stop\n  131: onFulfilled [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download/app.R#125]\n  129: onFulfilled\n  127: onFulfilled\n  125: onFulfilled\n  123: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: func\n  115: contextFunc\n  114: .getReactiveEnvironment()$runWith\n  113: onFulfilled\n  111: onFulfilled\n  109: callback\n  106: <Anonymous>\n  105: onFulfilled\n   95: f\n   94: FUN\n   93: lapply\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n  190: domain$wrapOnFulfilled\n  189: promiseDomain$onThen\n  188: action\n  181: promise\n  180: promise$then\n  179: then\n  178: %...>%\n  177: download$func [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/124-async-download/app.R#122]\n  152: contextFunc\n  151: env$runWith\n  140: Context$new(getDefaultReactiveDomain(), \"[download]\")$run\n  139: shinysession$handleRequest\n  134: handler\n  133: handler\n  132: handlers$invoke\n  100: handler\n   99: func\n   98: compute\n   93: rookCall\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\nshinyjster - stopping app: 124-async-download\n\n⠹ |   2      1 | shinyjster                                                     \n✔ |   2  2   2 | shinyjster [15.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-shinyjster.R:1:1'): 124-async-download - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny::printError(cond, full = full, offset = offset)\n\nWarning ('test-shinyjster.R:1:1'): 124-async-download - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny::printError(cond, full = full, offset = offset)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.1 s\n\n── Skipped tests (3) ───────────────────────────────────────────────────────────\n• (LEGACY) This app has issues about a URL being loaded. Testing manually\n  instead. (1): 'test-mytest.R:4:3'\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 2 | SKIP 3 | PASS 2 ]\n\n🧿 Your tests look perfect 🧿\n\nStopping tests for app: 124-async-download\n###"},{"app_name":"125-async-req","status":"pass","result":"\n###\nRunning tests for app: 125-async-req\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n✔ |   2      4 | mytest [3.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:8:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 125-async-req\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:14226/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:16:05 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 125-async-req\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [4.8s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 2 | SKIP 2 | PASS 6 ]\n\nStopping tests for app: 125-async-req\n###"},{"app_name":"126-async-ticks","status":"pass","result":"\n###\nRunning tests for app: 126-async-ticks\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [3.0s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 126-async-ticks\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:24780/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:16:13 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 126-async-ticks\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [4.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.0 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 1 | SKIP 2 | PASS 4 ]\n\nStopping tests for app: 126-async-ticks\n###"},{"app_name":"128-plot-dim-error","status":"fail","result":"\n###\nRunning tests for app: 128-plot-dim-error\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n✔ |          4 | mytest [2.5s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 128-plot-dim-error\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:47083/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 128-plot-dim-error\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/128-plot-dim-error\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x128d65e60> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 128-plot-dim-error - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/128-plot-dim-error - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.6 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 128-plot-dim-error - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/128-plot-dim-error - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 128-plot-dim-error\n###"},{"app_name":"129-async-perf","status":"pass","result":"\n###\nRunning tests for app: 129-async-perf\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 129-async-perf\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:18848/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:16:25 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\n\n⠋ |   1      0 | shinyjster                                                       129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠸ |   4      0 | shinyjster                                                       129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠦ |   7      0 | shinyjster                                                       129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠏ |   10      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠹ |   13      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠴ |   16      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠇ |   19      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠙ |   22      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠼ |   25      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠧ |   28      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠋ |   31      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠼ |   35      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠧ |   38      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠋ |   41      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠸ |   44      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠦ |   47      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n\n⠏ |   50      0 | shinyjster                                                      129: stop\n  128: onFulfilled\n  126: onFulfilled\n  124: onFulfilled\n  122: func\n  121: contextFunc\n  120: .getReactiveEnvironment()$runWith\n  119: onFulfilled\n  118: onFulfilled\n  116: onFulfilled\n  114: onFulfilled\n  112: onFulfilled\n  111: onFulfilled\n  109: onFulfilled\n  107: callback\n  104: <Anonymous>\n  103: onFulfilled\n   93: handleFulfill\n   92: <Anonymous>\n   91: execCallbacks\n   90: run_now\n   89: service\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\nshinyjster - stopping app: 129-async-perf\n\n⠋ |   50      1 | shinyjster                                                    \n✔ |   50  2   2 | shinyjster [6.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 129-async-perf - shinyjster - chrome\nError in onFulfilled: boom\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 50 | SKIP 2 | PASS 2 ]\n\nStopping tests for app: 129-async-perf\n###"},{"app_name":"130-output-null","status":"fail","result":"\n###\nRunning tests for app: 130-output-null\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n✔ |          4 | mytest [2.6s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 130-output-null\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:25834/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 130-output-null\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/130-output-null\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x13353adf0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 130-output-null - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/130-output-null - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 130-output-null - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/130-output-null - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 130-output-null\n###"},{"app_name":"131-renderplot-args","status":"fail","result":"\n###\nRunning tests for app: 131-renderplot-args\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [2.1s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 131-renderplot-args\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:24987/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 131-renderplot-args\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/131-renderplot-args\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x135b985f8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 131-renderplot-args - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/131-renderplot-args - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 131-renderplot-args - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/131-renderplot-args - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 131-renderplot-args\n###"},{"app_name":"132-async-events","status":"pass","result":"\n###\nRunning tests for app: 132-async-events\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠹ |   5      8 | mytest                                                         \n⠴ |   6     10 | mytest                                                         \n⠇ |   7     12 | mytest                                                         \n✔ |   7     14 | mytest [6.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:16:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/009_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/011_.png'\n\nWarning ('test-mytest.R:25:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/013_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 132-async-events\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:34166/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:16:51 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\n\n⠋ |   1      0 | shinyjster                                                       269: stop\n  268: eventReactiveValueFunc [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events/app.R#118]\n  216: root\n  215: eval_tidy\n  214: eventFunc\n  201: <reactive:eventReactive(root())>\n  200: .func\n  197: contextFunc\n  196: env$runWith\n  185: ctx$run\n  184: self$.updateValue\n  182: sync_er\n  181: renderText [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events/app.R#135]\n  180: func\n  167: renderFunc\n  166: output$sync_output\n  164: orig\n  163: func\n  128: observe\n  127: <observer:output$sync_output>\n  126: contextFunc\n  125: env$runWith\n  114: ctx$run\n  113: run\n   94: flushCallback\n   93: FUN\n   92: lapply\n   91: ctx$executeFlushCallbacks\n   90: .getReactiveEnvironment()$flush\n   89: flushReact\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\n  269: stop\n  268: eventReactiveValueFunc [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events/app.R#118]\n  216: root\n  215: eval_tidy\n  214: eventFunc\n  201: <reactive:eventReactive(root())>\n  200: .func\n  197: contextFunc\n  196: env$runWith\n  185: ctx$run\n  184: self$.updateValue\n  182: sync_er\n  181: renderText [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events/app.R#135]\n  180: func\n  167: renderFunc\n  166: output$sync_output\n  164: orig\n  163: func\n  128: observe\n  127: <observer:output$sync_output>\n  126: contextFunc\n  125: env$runWith\n  114: ctx$run\n  113: run\n   94: flushCallback\n   93: FUN\n   92: lapply\n   91: ctx$executeFlushCallbacks\n   90: .getReactiveEnvironment()$flush\n   89: flushReact\n   88: serviceApp\n  228: domain$wrapOnFulfilled\n  227: promiseDomain$onThen\n  226: action\n  219: promise\n  218: promise$then\n  217: then\n  216: %...>%\n  215: eval_tidy\n  214: eventFunc\n  201: <reactive>\n  200: .func\n  197: contextFunc\n  196: env$runWith\n  185: ctx$run\n  184: self$.updateValue\n  182: async_er\n  181: renderText [/Users/runner/work/shinycoreci/shinycoreci/inst/apps/132-async-events/app.R#139]\n  180: func\n  167: renderFunc\n  166: output$async_output\n  164: orig\n  163: func\n  128: observe\n  127: <observer:output$async_output>\n  126: contextFunc\n  125: env$runWith\n  114: ctx$run\n  113: run\n   94: flushCallback\n   93: FUN\n   92: lapply\n   91: ctx$executeFlushCallbacks\n   90: .getReactiveEnvironment()$flush\n   89: flushReact\n   88: serviceApp\n   81: shiny::runApp\n   80: run_jster\n   79: FUN\n   78: lapply\n   77: run_jster_apps_lapply\n   76: run_jster_apps\n   71: FUN\n   70: lapply\n   69: FUN\n   68: lapply\n   67: test_jster\n   66: eval\n   65: eval\n   56: test_code\n   55: testthat::test_that\n   54: FUN\n   53: lapply\n   52: shinyjster::testthat_shinyjster\n   51: eval [test-shinyjster.R#1]\n   50: eval\n   41: test_code\n   40: source_file\n   39: FUN\n   38: lapply\n   32: test_files_serial\n   31: test_files\n   30: testthat::test_dir\n   29: shinytest2::test_app\n   27: eval\n   26: eval\n   25: sourceUTF8\n   18: FUN\n   17: lapply\n   15: shiny::runTests\n   12: <Anonymous>\n   11: <Anonymous>\n   10: base::do.call\n    9: base::saveRDS\n    8: base::withCallingHandlers\n    7: doTryCatch\n    6: tryCatchOne\n    5: tryCatchList\n    2: tryCatchList\n    1: base::tryCatch\nshinyjster - stopping app: 132-async-events\n\n⠹ |   2      1 | shinyjster                                                     \n✔ |   2  2   2 | shinyjster [14.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-shinyjster.R:1:1'): 132-async-events - shinyjster - chrome\nError in eventReactiveValueFunc: error!\nBacktrace:\n     ▆\n  1. └─shinyjster::test_jster(...)\n  2.   └─base::lapply(...)\n  3.     └─shinyjster (local) FUN(X[[i]], ...)\n  4.       └─base::lapply(...)\n  5.         └─shinyjster (local) FUN(X[[i]], ...)\n  6.           ├─base::tryCatch(...)\n  7.           │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8.           │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9.           │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10.           └─shinyjster::run_jster_apps(...)\n 11.             └─shinyjster:::run_jster_apps_lapply(...)\n 12.               └─base::lapply(...)\n 13.                 └─shinyjster (local) FUN(X[[i]], ...)\n 14.                   └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15.                     └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16.                       ├─shiny::..stacktraceoff..(...)\n 17.                       ├─shiny::captureStackTraces(...)\n 18.                       │ └─promises::with_promise_domain(...)\n 19.                       │   └─domain$wrapSync(expr)\n 20.                       │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21.                       ├─shiny:::..stacktracefloor..(serviceApp())\n 22.                       └─shiny:::serviceApp()\n 23.                         └─shiny:::flushReact()\n 24.                           └─.getReactiveEnvironment()$flush()\n 25.                             └─ctx$executeFlushCallbacks()\n 26.                               └─base::lapply(...)\n 27.                                 └─shiny (local) FUN(X[[i]], ...)\n 28.                                   └─shiny (local) flushCallback()\n 29.                                     ├─shiny:::hybrid_chain(...)\n 30.                                     │ └─shiny (local) do()\n 31.                                     │   ├─base::tryCatch(...)\n 32.                                     │   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 33.                                     │   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 34.                                     │   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 35.                                     │   ├─shiny::captureStackTraces(...)\n 36.                                     │   │ └─promises::with_promise_domain(...)\n 37.                                     │   │   └─domain$wrapSync(expr)\n 38.                                     │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 39.                                     │   ├─base::withVisible(force(expr))\n 40.                                     │   └─base::force(expr)\n 41.                                     ├─shiny:::shinyCallingHandlers(run())\n 42.                                     │ ├─base::withCallingHandlers(...)\n 43.                                     │ └─shiny::captureStackTraces(expr)\n 44.                                     │   └─promises::with_promise_domain(...)\n 45.                                     │     └─domain$wrapSync(expr)\n 46.                                     │       └─base::withCallingHandlers(expr, error = doCaptureStack)\n 47.                                     └─shiny (local) run()\n 48.                                       └─ctx$run(.func)\n 49.                                         ├─promises::with_promise_domain(...)\n 50.                                         │ └─domain$wrapSync(expr)\n 51.                                         ├─shiny::withReactiveDomain(...)\n 52.                                         │ └─promises::with_promise_domain(...)\n 53.                                         │   └─domain$wrapSync(expr)\n 54.                                         │     └─base::force(expr)\n 55.                                         ├─shiny::captureStackTraces(...)\n 56.                                         │ └─promises::with_promise_domain(...)\n 57.                                         │   └─domain$wrapSync(expr)\n 58.                                         │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 59.                                         └─env$runWith(self, func)\n 60.                                           └─shiny (local) contextFunc()\n 61.                                             └─shiny (local) `<observer:output$sync_output>`(...)\n 62.                                               └─shiny::observe()\n 63.                                                 ├─shiny:::hybrid_chain(...)\n 64.                                                 │ └─shiny (local) do()\n 65.                                                 │   ├─base::tryCatch(...)\n 66.                                                 │   │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 67.                                                 │   │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 68.                                                 │   │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 69.                                                 │   ├─shiny::captureStackTraces(...)\n 70.                                                 │   │ └─promises::with_promise_domain(...)\n 71.                                                 │   │   └─domain$wrapSync(expr)\n 72.                                                 │   │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 73.                                                 │   ├─base::withVisible(force(expr))\n 74.                                                 │   └─base::force(expr)\n 75.                                                 └─shiny:::hybrid_chain(...)\n 76.                                                   └─shiny (local) do()\n 77.                                                     └─base::tryCatch(...)\n 78.                                                       └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 79.                                                         └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 80.                                                           └─value[[3L]](cond)\n 81.                                                             └─shiny (local) catch(e)\n 82.                                                               └─shiny::printError(cond)\n\nWarning ('test-shinyjster.R:1:1'): 132-async-events - shinyjster - chrome\nError in eventReactiveValueFunc: error!\nBacktrace:\n     ▆\n  1. ├─shinyjster::test_jster(...)\n  2. │ └─base::lapply(...)\n  3. │   └─shinyjster (local) FUN(X[[i]], ...)\n  4. │     └─base::lapply(...)\n  5. │       └─shinyjster (local) FUN(X[[i]], ...)\n  6. │         ├─base::tryCatch(...)\n  7. │         │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n  8. │         │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  9. │         │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 10. │         └─shinyjster::run_jster_apps(...)\n 11. │           └─shinyjster:::run_jster_apps_lapply(...)\n 12. │             └─base::lapply(...)\n 13. │               └─shinyjster (local) FUN(X[[i]], ...)\n 14. │                 └─shinyjster::run_jster(app, port = port, host = host, browser = browser)\n 15. │                   └─shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n 16. │                     ├─shiny::..stacktraceoff..(...)\n 17. │                     ├─shiny::captureStackTraces(...)\n 18. │                     │ └─promises::with_promise_domain(...)\n 19. │                     │   └─domain$wrapSync(expr)\n 20. │                     │     └─base::withCallingHandlers(expr, error = doCaptureStack)\n 21. │                     ├─shiny:::..stacktracefloor..(serviceApp())\n 22. │                     └─shiny:::serviceApp()\n 23. │                       └─httpuv::service(timeout)\n 24. │                         └─later::run_now(timeoutMs/1000, all = FALSE)\n 25. │                           └─later:::execCallbacks(timeoutSecs, all, loop$id)\n 26. └─promises (local) `<fn>`()\n 27.   └─base::lapply(...)\n 28.     └─promises (local) FUN(X[[i]], ...)\n 29.       └─promises (local) f(private$value)\n 30.         ├─promises:::resolve(onRejected(reason))\n 31.         │ ├─promises:::tryCatch(...)\n 32.         │ │ ├─base::tryCatch(...)\n 33.         │ │ │ └─base (local) tryCatchList(expr, classes, parentenv, handlers)\n 34.         │ │ │   └─base (local) tryCatchOne(expr, names, parentenv, handlers[[1L]])\n 35.         │ │ │     └─base (local) doTryCatch(return(expr), name, parentenv, handler)\n 36.         │ │ └─base::withCallingHandlers(...)\n 37.         │ └─private$doResolve(value)\n 38.         │   └─base::withVisible(value)\n 39.         └─promises (local) onRejected(reason)\n 40.           └─promises (local) `<fn>`(... = ...)\n 41.             ├─promises:::reenter_promise_domain(domain, callback(...), replace = TRUE)\n 42.             │ └─base::force(expr)\n 43.             └─shiny (local) callback(...)\n 44.               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 45.               └─shiny (local) onRejected(...)\n 46.                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 47.                 └─shiny (local) onRejected(...)\n 48.                   ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 49.                   └─shiny (local) onRejected(...)\n 50.                     └─shiny (local) onRejected(...)\n 51.                       └─.getReactiveEnvironment()$runWith(...)\n 52.                         └─shiny (local) contextFunc()\n 53.                           └─shiny (local) func(...)\n 54.                             ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 55.                             └─shiny (local) onRejected(...)\n 56.                               ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 57.                               └─shiny (local) onRejected(...)\n 58.                                 ├─base::withCallingHandlers(onRejected(...), error = doCaptureStack)\n 59.                                 └─shiny (local) onRejected(...)\n 60.                                   └─shiny::printError(cond)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 20.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 9 | SKIP 2 | PASS 16 ]\n\nStopping tests for app: 132-async-events\n###"},{"app_name":"133-async-hold-inputs","status":"pass","result":"\n###\nRunning tests for app: 133-async-hold-inputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   2      1 | mytest                                                         \n⠼ |   2      3 | mytest                                                         \n✔ |   2      3 | mytest [5.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 133-async-hold-inputs\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:40202/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:17:12 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 133-async-hold-inputs\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [37.4s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 42.8 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 2 | SKIP 2 | PASS 5 ]\n\nStopping tests for app: 133-async-hold-inputs\n###"},{"app_name":"134-async-hold-timers","status":"pass","result":"\n###\nRunning tests for app: 134-async-hold-timers\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          1 | mytest [13.9s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 134-async-hold-timers\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:40630/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:18:03 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 134-async-hold-timers\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [15.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 29.0 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 0 | SKIP 2 | PASS 3 ]\n\nStopping tests for app: 134-async-hold-timers\n###"},{"app_name":"135-bookmark-uioutput","status":"pass","result":"\n###\nRunning tests for app: 135-bookmark-uioutput\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠇ |   3      6 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠙ |   4      8 | mytest                                                         \n✔ |   4      8 | mytest [5.2s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:22:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.2 s\n\n[ FAIL 0 | WARN 4 | SKIP 0 | PASS 8 ]\n\nStopping tests for app: 135-bookmark-uioutput\n###"},{"app_name":"136-plot-cache","status":"pass","result":"\n###\nRunning tests for app: 136-plot-cache\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [6.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.4 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\n🧿 Your tests look perfect 🧿\n\nStopping tests for app: 136-plot-cache\n###"},{"app_name":"137-plot-cache-key","status":"pass","result":"\n###\nRunning tests for app: 137-plot-cache-key\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠹ |   5      8 | mytest                                                         \n✔ |   5     10 | mytest [11.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:11:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:20:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n\nWarning ('test-mytest.R:23:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 11.4 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 10 ]\n\nStopping tests for app: 137-plot-cache-key\n###"},{"app_name":"138-icon-fontawesome","status":"pass","result":"\n###\nRunning tests for app: 138-icon-fontawesome\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      5 | mytest [2.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:7:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.5 s\n\n[ FAIL 0 | WARN 1 | SKIP 0 | PASS 5 ]\n\nStopping tests for app: 138-icon-fontawesome\n###"},{"app_name":"140-selectize-inputs","status":"pass","result":"\n###\nRunning tests for app: 140-selectize-inputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n✔ |   1      2 | mytest [3.8s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:19:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 140-selectize-inputs\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:21142/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Feb 27, 2025 5:18:51 AM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch\npxjava - WARNING: Unable to find an exact match for CDP version 132, returning the closest version; found: 131; Please update to a Selenium version that supports CDP version 132\nshinyjster - stopping app: 140-selectize-inputs\n\n⠋ |          1 | shinyjster                                                     \n✔ |      2   2 | shinyjster [28.9s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 32.8 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 1 | SKIP 2 | PASS 4 ]\n\nStopping tests for app: 140-selectize-inputs\n###"},{"app_name":"142-reactive-timer","status":"fail","result":"\n###\nRunning tests for app: 142-reactive-timer\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 142-reactive-timer\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:39206/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 142-reactive-timer\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/142-reactive-timer\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1068b2e50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 142-reactive-timer - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/142-reactive-timer - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 142-reactive-timer - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/142-reactive-timer - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 142-reactive-timer\n###"},{"app_name":"143-async-plot-caching","status":"fail","result":"\n###\nRunning tests for app: 143-async-plot-caching\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ | 1        1 | mytest                                                         \n✖ | 1        1 | mytest [4.7s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:21:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 143-async-plot-caching\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:39489/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 143-async-plot-caching\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/143-async-plot-caching\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11dc14fc8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 143-async-plot-caching - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/143-async-plot-caching - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.8 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:21:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/002.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:21:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nError ('test-shinyjster.R:1:1'): 143-async-plot-caching - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/143-async-plot-caching - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 2 | WARN 0 | SKIP 2 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 143-async-plot-caching\n###"},{"app_name":"145-dt-replacedata","status":"fail","result":"\n###\nRunning tests for app: 145-dt-replacedata\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 145-dt-replacedata\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:30768/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 145-dt-replacedata\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/145-dt-replacedata\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x104dc8850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 145-dt-replacedata - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/145-dt-replacedata - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:3:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:3:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 145-dt-replacedata - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/145-dt-replacedata - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 145-dt-replacedata\n###"},{"app_name":"147-websocket","status":"fail","result":"\n###\nRunning tests for app: 147-websocket\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 147-websocket\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:24138/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 147-websocket\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/147-websocket\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x14ca6f650> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 147-websocket - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/147-websocket - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 147-websocket - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/147-websocket - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 147-websocket\n###"},{"app_name":"148-addresourcepath-deleted","status":"fail","result":"\n###\nRunning tests for app: 148-addresourcepath-deleted\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [2.3s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 148-addresourcepath-deleted\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:42973/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 148-addresourcepath-deleted\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/148-addresourcepath-deleted\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12b43c640> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 148-addresourcepath-deleted - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/148-addresourcepath-deleted - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 148-addresourcepath-deleted - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/148-addresourcepath-deleted - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 148-addresourcepath-deleted\n###"},{"app_name":"149-onRender","status":"fail","result":"\n###\nRunning tests for app: 149-onRender\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 149-onRender\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:47988/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 149-onRender\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/149-onRender\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x13b12ba50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 149-onRender - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/149-onRender - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:3:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:3:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 149-onRender - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/149-onRender - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 149-onRender\n###"},{"app_name":"150-networkD3-sankey","status":"pass","result":"\n###\nRunning tests for app: 150-networkD3-sankey\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [3.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:13:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 150-networkD3-sankey\n###"},{"app_name":"151-reactr-input","status":"fail","result":"\n###\nRunning tests for app: 151-reactr-input\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n⠹ |          3 | mytest                                                         \n⠸ |          4 | mytest                                                         \n✔ |          4 | mytest [4.0s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 151-reactr-input\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:13067/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 151-reactr-input\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/151-reactr-input\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10fec6c68> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 151-reactr-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/151-reactr-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:3:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:3:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 151-reactr-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/151-reactr-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 151-reactr-input\n###"},{"app_name":"152-set-reactivevalue","status":"fail","result":"\n###\nRunning tests for app: 152-set-reactivevalue\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 152-set-reactivevalue\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:14078/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 152-set-reactivevalue\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/152-set-reactivevalue\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1148c8850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 152-set-reactivevalue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/152-set-reactivevalue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 152-set-reactivevalue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/152-set-reactivevalue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 152-set-reactivevalue\n###"},{"app_name":"153-connection-header","status":"fail","result":"\n###\nRunning tests for app: 153-connection-header\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n✔ |          2 | mytest [2.6s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 153-connection-header\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:38405/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 153-connection-header\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/153-connection-header\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x148a1d540> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 153-connection-header - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/153-connection-header - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 153-connection-header - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/153-connection-header - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 153-connection-header\n###"},{"app_name":"154-index-html-server-r","status":"fail","result":"\n###\nRunning tests for app: 154-index-html-server-r\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [2.1s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 154-index-html-server-r\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:26060/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 154-index-html-server-r\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/154-index-html-server-r\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1194d72b8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 154-index-html-server-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/154-index-html-server-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 154-index-html-server-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/154-index-html-server-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 154-index-html-server-r\n###"},{"app_name":"155-index-html-app-r","status":"fail","result":"\n###\nRunning tests for app: 155-index-html-app-r\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [1.9s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 155-index-html-app-r\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:4814/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 155-index-html-app-r\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/155-index-html-app-r\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12fb9c9c0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 155-index-html-app-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/155-index-html-app-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.0 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 155-index-html-app-r - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/155-index-html-app-r - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 155-index-html-app-r\n###"},{"app_name":"156-subapps","status":"fail","result":"\n###\nRunning tests for app: 156-subapps\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n✔ |          2 | mytest [11.6s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 156-subapps\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:41946/index.Rmd?shinyjster=1' 120 \\\n  --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 156-subapps\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/156-subapps\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 97\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1234730d0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language rmarkdown::run(appDir, shiny_args = list(port = port, host = host, launch.browser = FALSE))\n  .. .. ..$ : language do.call(shiny::runApp, shiny_args)\n  .. .. ..$ : language (function (appDir = getwd(), port = getOption(\"shiny.port\"), launch.browser = getOption(\"shiny.launch.browser\",  | __truncated__ ...\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:97] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"3ad914ede6e73ebbf06f01c248f66930\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 156-subapps - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/156-subapps - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 21.7 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 156-subapps - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/156-subapps - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\n\nKeep trying!\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 156-subapps\n###"},{"app_name":"157-date-format","status":"fail","result":"\n###\nRunning tests for app: 157-date-format\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 157-date-format\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:4780/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 157-date-format\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/157-date-format\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12b61e850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 157-date-format - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/157-date-format - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 157-date-format - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/157-date-format - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 157-date-format\n###"},{"app_name":"158-input-labels","status":"fail","result":"\n###\nRunning tests for app: 158-input-labels\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n✔ |          4 | mytest [2.7s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 158-input-labels\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:9440/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 158-input-labels\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/158-input-labels\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12d54fce0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 158-input-labels - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/158-input-labels - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.8 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 158-input-labels - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/158-input-labels - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 158-input-labels\n###"},{"app_name":"159-rate-policy","status":"pass","result":"\n###\nRunning tests for app: 159-rate-policy\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.6 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 159-rate-policy\n###"},{"app_name":"160-select-input","status":"fail","result":"\n###\nRunning tests for app: 160-select-input\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [2.2s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 160-select-input\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:43013/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 160-select-input\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/160-select-input\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1053530d0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 160-select-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/160-select-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 160-select-input - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/160-select-input - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 160-select-input\n###"},{"app_name":"163-select-factor","status":"fail","result":"\n###\nRunning tests for app: 163-select-factor\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n✔ |          4 | mytest [2.2s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 163-select-factor\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:14122/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 163-select-factor\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/163-select-factor\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12515d938> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 163-select-factor - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/163-select-factor - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.3 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 163-select-factor - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/163-select-factor - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 6 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 163-select-factor\n###"},{"app_name":"164-no-whitespace","status":"fail","result":"\n###\nRunning tests for app: 164-no-whitespace\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [2.2s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 164-no-whitespace\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:20062/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 164-no-whitespace\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/164-no-whitespace\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1126059f0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 164-no-whitespace - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/164-no-whitespace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:3:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:3:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 164-no-whitespace - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/164-no-whitespace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 164-no-whitespace\n###"},{"app_name":"165-trailing-comma","status":"fail","result":"\n###\nRunning tests for app: 165-trailing-comma\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [2.2s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 165-trailing-comma\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:24587/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 165-trailing-comma\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/165-trailing-comma\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12ae20268> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 165-trailing-comma - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/165-trailing-comma - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 165-trailing-comma - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/165-trailing-comma - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\n\nNo one gets it right on their first try\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 165-trailing-comma\n###"},{"app_name":"166-dynamic-hosted-tab","status":"fail","result":"\n###\nRunning tests for app: 166-dynamic-hosted-tab\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 166-dynamic-hosted-tab\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:27463/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 166-dynamic-hosted-tab\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/166-dynamic-hosted-tab\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x14f2a37a8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 166-dynamic-hosted-tab - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/166-dynamic-hosted-tab - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 166-dynamic-hosted-tab - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/166-dynamic-hosted-tab - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 166-dynamic-hosted-tab\n###"},{"app_name":"168-supporting-r-dir","status":"fail","result":"\n###\nRunning tests for app: 168-supporting-r-dir\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n✔ |          4 | mytest [2.2s]\n\n⠏ |          0 | server                                                         \n✔ |          4 | server\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 168-supporting-r-dir\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:27255/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 168-supporting-r-dir\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/168-supporting-r-dir\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 97\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language withr:::with_options(list(shiny.autoload.r = TRUE), {     shinyjster::testthat_shinyjster() ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 3 2 1 2 1 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10ecfc240> \n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 2 3 2 35 3 35 2 2\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10ecfc240> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:97] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"fb7395f450445b04c77844bc7b4dfc2d\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:2:3'): 168-supporting-r-dir - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/168-supporting-r-dir - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:2:3'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:2:3'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:2:3'): 168-supporting-r-dir - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/168-supporting-r-dir - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 10 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 168-supporting-r-dir\n###"},{"app_name":"169-prerender","status":"fail","result":"\n###\nRunning tests for app: 169-prerender\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster-custom                                              shinyjster - starting app: index.Rmd\n1/6                  \n2/6 [unnamed-chunk-1]\n3/6                  \n4/6 [shinyjster]     \n5/6                  \n6/6 [unnamed-chunk-2]\n/usr/local/bin/pandoc +RTS -K512m -RTS index.knit.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash --output index.html --lua-filter '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/rmarkdown/rmarkdown/lua/pagebreak.lua' --lua-filter '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/rmarkdown/rmarkdown/lua/latex-div.lua' --variable bs3=TRUE --standalone --section-divs --template '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/rmarkdown/rmd/h/default.html' --no-highlight --variable highlightjs=1 --id-prefix section- --variable theme=bootstrap --mathjax --variable 'mathjax-url=https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' --include-in-header '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/rmarkdown/rmd/h/shiny-header.html' \nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:35721/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: index.Rmd\nshinyjster - starting app: 169-prerender-b\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:47068/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 169-prerender-b\n\n⠋ |          1 | shinyjster-custom                                              List of 4\n $ appDir     : chr [1:2] \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-a/index.Rmd\" \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-b\"\n $ successful : logi [1:2] FALSE FALSE\n $ returnValue:List of 2\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 94\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_that(\"169 clears registered paths between apps\", {     app <- \"../../\" ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 25 2 1 2 3 25\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10d302c48> \n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::test_jster(apps = c(file.path(app, \"169-prerender-a\", \"index.Rmd\"),      file.path(app, \"169-prerende| __truncated__\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 17 3 24 3 3 3 17 24\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10d302c48> \n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language rmarkdown::run(appDir, shiny_args = list(port = port, host = host, launch.browser = FALSE))\n  .. .. ..$ : language do.call(shiny::runApp, shiny_args)\n  .. .. ..$ : language (function (appDir = getwd(), port = getOption(\"shiny.port\"), launch.browser = getOption(\"shiny.launch.browser\",  | __truncated__ ...\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:94] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"ec00c379a8b450c259c96e060cca48c0\"\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 92\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_that(\"169 clears registered paths between apps\", {     app <- \"../../\" ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 25 2 1 2 3 25\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10d302c48> \n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::test_jster(apps = c(file.path(app, \"169-prerender-a\", \"index.Rmd\"),      file.path(app, \"169-prerende| __truncated__\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 17 3 24 3 3 3 17 24\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10d302c48> \n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:92] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"f54b7fdabb2e238faa20ceec770201e5\"\n $ browser    : chr [1:2] \"chrome\" \"chrome\"\n\n✖ | 1        2 | shinyjster-custom [20.2s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster-custom.R:17:3'): 169 clears registered paths between apps\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-a/index.Rmd - chrome\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-b - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...) at test-shinyjster-custom.R:17:3\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 20.2 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster-custom.R:17:3'): 169 clears registered paths between apps\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-a/index.Rmd - chrome\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/169-prerender/169-prerender-b - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...) at test-shinyjster-custom.R:17:3\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 0 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 169-prerender\n###"},{"app_name":"170-date-range-max","status":"fail","result":"\n###\nRunning tests for app: 170-date-range-max\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 170-date-range-max\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:36969/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 170-date-range-max\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/170-date-range-max\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x141519850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 170-date-range-max - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/170-date-range-max - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 170-date-range-max - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/170-date-range-max - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 170-date-range-max\n###"},{"app_name":"171-path-traversal","status":"fail","result":"\n###\nRunning tests for app: 171-path-traversal\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 171-path-traversal\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:36741/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 171-path-traversal\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/171-path-traversal\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x13058b3a8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 171-path-traversal - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/171-path-traversal - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 171-path-traversal - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/171-path-traversal - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 171-path-traversal\n###"},{"app_name":"173-invalidatelater-leak","status":"fail","result":"\n###\nRunning tests for app: 173-invalidatelater-leak\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 173-invalidatelater-leak\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:6827/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 173-invalidatelater-leak\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/173-invalidatelater-leak\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11f310650> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 173-invalidatelater-leak - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/173-invalidatelater-leak - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 173-invalidatelater-leak - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/173-invalidatelater-leak - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 173-invalidatelater-leak\n###"},{"app_name":"174-throttle-debounce","status":"fail","result":"\n###\nRunning tests for app: 174-throttle-debounce\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 174-throttle-debounce\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:22458/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 174-throttle-debounce\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/174-throttle-debounce\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11599ae50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 174-throttle-debounce - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/174-throttle-debounce - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 174-throttle-debounce - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/174-throttle-debounce - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 174-throttle-debounce\n###"},{"app_name":"175-setInputValue","status":"fail","result":"\n###\nRunning tests for app: 175-setInputValue\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n✔ |          2 | mytest [4.2s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 175-setInputValue\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:27660/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 175-setInputValue\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/175-setInputValue\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x149688c60> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 175-setInputValue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/175-setInputValue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 14.4 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 175-setInputValue - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/175-setInputValue - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 175-setInputValue\n###"},{"app_name":"178-delayed-widget","status":"fail","result":"\n###\nRunning tests for app: 178-delayed-widget\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n✔ |          2 | mytest [5.5s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 178-delayed-widget\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:33941/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 178-delayed-widget\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/178-delayed-widget\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12d10b1d8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 178-delayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/178-delayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.6 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 178-delayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/178-delayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 178-delayed-widget\n###"},{"app_name":"179-nondelayed-widget","status":"fail","result":"\n###\nRunning tests for app: 179-nondelayed-widget\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n✔ |          2 | mytest [5.3s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 179-nondelayed-widget\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:37017/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 179-nondelayed-widget\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/179-nondelayed-widget\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11c1dc4a8> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 179-nondelayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/179-nondelayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.5 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 179-nondelayed-widget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/179-nondelayed-widget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 179-nondelayed-widget\n###"},{"app_name":"180-delayed-staticwidget","status":"fail","result":"\n###\nRunning tests for app: 180-delayed-staticwidget\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠙ |          2 | mytest                                                         \n✔ |          2 | mytest [5.5s]\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 180-delayed-staticwidget\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:41841/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 180-delayed-staticwidget\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/180-delayed-staticwidget\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x128f48318> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 180-delayed-staticwidget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/180-delayed-staticwidget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.6 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 180-delayed-staticwidget - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/180-delayed-staticwidget - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 180-delayed-staticwidget\n###"},{"app_name":"181-report-image","status":"can_not_install","result":"Failed to install:\n * Cairo\n * htmltools\n * jsonlite\n * ragg\n * shiny\n * shinytest2\n * showtext\n * sysfonts\n * systemfonts\n \nError:\n Error : ! in callr subprocess.\nCaused by error: \n! error in pak subprocess\nCaused by error in `stop_task_build(state, worker)`:\n! Failed to build source package systemfonts.\nFull installation output:\n* installing *source* package ‘systemfonts’ ...\n** package ‘systemfonts’ successfully unpacked and MD5 sums checked\nstaged installation is only possible with locking\n** using non-staged installation\nFound pkg-config cflags and libs!\nUsing PKG_CFLAGS=-I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16\nUsing PKG_LIBS=-L/opt/homebrew/opt/freetype/lib -lfreetype -lbz2 -L/opt/homebrew/opt/libpng/lib -lpng16 -lz\n** libs\nusing C++ compiler: ‘Apple clang version 15.0.0 (clang-1500.3.9.4)’\nusing SDK: ‘’\nrm -f systemfonts.so caches.o cpp11.o dev_metrics.o font_matching.o font_local.o font_registry.o ft_cache.o string_shape.o font_metrics.o font_outlines.o font_fallback.o string_metrics.o emoji.o cache_store.o init.o mac/FontManagerMac.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c caches.cpp -o caches.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cpp11.cpp -o cpp11.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c dev_metrics.cpp -o dev_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_matching.cpp -o font_matching.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_local.cpp -o font_local.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_registry.cpp -o font_registry.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c ft_cache.cpp -o ft_cache.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_shape.cpp -o string_shape.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_metrics.cpp -o font_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_outlines.cpp -o font_outlines.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_fallback.cpp -o font_fallback.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_metrics.cpp -o string_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c emoji.cpp -o emoji.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cache_store.cpp -o cache_store.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c init.cpp -o init.o\nclang++ -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include   -fobjc-arc -fPIC   -c mac/FontManagerMac.mm -o mac/FontManagerMac.o\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\nIn file included from /Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:10:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:1: error: unknown type name 'constexpr'\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:19: error: expected ';' after top level declarator\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n                  ^\n                  ;\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:59:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = T;\n               ^\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:38:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), SEXP>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:39:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nSEXP unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:37:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:40:24: error: expected expression\n  static SEXP token = [] {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:8: error: expected expression\n      [](void* data) -> SEXP {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:14: error: expected '(' for function-style cast or type construction\n      [](void* data) -> SEXP {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:16: error: use of undeclared identifier 'data'\n      [](void* data) -> SEXP {\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:8: error: expected expression\n      [](void* jmpbuf, Rboolean jump) {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:14: error: expected '(' for function-style cast or type construction\n      [](void* jmpbuf, Rboolean jump) {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:24: error: unexpected type name 'Rboolean': expected expression\n      [](void* jmpbuf, Rboolean jump) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:76:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), void>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:77:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nvoid unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:75:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:78:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:87:19: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nunwind_protect(Fun&& code) {\n                  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                 ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:89:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:98:17: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <size_t...>\n                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:100:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = index_sequence;\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:106:22: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <std::size_t... I, std::size_t J>\n                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:47: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:117:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:6: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:17: error: no template named 'tuple' in namespace 'std'\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n           ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:31: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:122:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:67: error: no template named 'tuple' in namespace 'std'\n                                                             std::tuple<Aref...>&& a) {\n                                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:81: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                                                             std::tuple<Aref...>&& a) {\n                                                                                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:125:86: error: expected '(' for function-style cast or type construction\n  return apply(std::forward<F>(f), std::move(a), make_index_sequence<sizeof...(Aref)>{});\n                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:40: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:51: error: no template named 'tuple' in namespace 'std'\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:58: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:135:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:137:70: warning: reference qualifiers on functions are a C++11 extension [-Wc++11-extensions]\n  decltype(std::declval<F*>()(std::declval<Aref>()...)) operator()() && {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:141:8: error: no template named 'tuple' in namespace 'std'\n  std::tuple<Aref...> arefs_;\n  ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:149:23: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\n    template <typename... A>\n                      ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:47: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:70: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:3: error: unknown type name 'constexpr'\n  constexpr function<F> operator[](F* raw) const {\n  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:13: error: member 'function' declared as a template\n  constexpr function<F> operator[](F* raw) const {\n            ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:24: error: expected ';' at end of declaration list\n  constexpr function<F> operator[](F* raw) const {\n                       ^\n                       ;\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n30 warnings and 20 errors generated.\nmake: *** [mac/FontManagerMac.o] Error 1\nERROR: compilation failed for package ‘systemfonts’\n* removing ‘/private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/RtmpngtD1s/pkg-lib7dc01db9b005/systemfonts’\n "},{"app_name":"182-report-png","status":"can_not_install","result":"Failed to install:\n * Cairo\n * htmltools\n * jsonlite\n * ragg\n * shiny\n * shinytest2\n * showtext\n * sysfonts\n * systemfonts\n \nError:\n Error : ! in callr subprocess.\nCaused by error: \n! error in pak subprocess\nCaused by error in `stop_task_build(state, worker)`:\n! Failed to build source package systemfonts.\nFull installation output:\n* installing *source* package ‘systemfonts’ ...\n** package ‘systemfonts’ successfully unpacked and MD5 sums checked\nstaged installation is only possible with locking\n** using non-staged installation\nFound pkg-config cflags and libs!\nUsing PKG_CFLAGS=-I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16\nUsing PKG_LIBS=-L/opt/homebrew/opt/freetype/lib -lfreetype -lbz2 -L/opt/homebrew/opt/libpng/lib -lpng16 -lz\n** libs\nusing C++ compiler: ‘Apple clang version 15.0.0 (clang-1500.3.9.4)’\nusing SDK: ‘’\nrm -f systemfonts.so caches.o cpp11.o dev_metrics.o font_matching.o font_local.o font_registry.o ft_cache.o string_shape.o font_metrics.o font_outlines.o font_fallback.o string_metrics.o emoji.o cache_store.o init.o mac/FontManagerMac.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c caches.cpp -o caches.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cpp11.cpp -o cpp11.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c dev_metrics.cpp -o dev_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_matching.cpp -o font_matching.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_local.cpp -o font_local.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_registry.cpp -o font_registry.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c ft_cache.cpp -o ft_cache.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_shape.cpp -o string_shape.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_metrics.cpp -o font_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_outlines.cpp -o font_outlines.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_fallback.cpp -o font_fallback.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_metrics.cpp -o string_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c emoji.cpp -o emoji.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cache_store.cpp -o cache_store.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c init.cpp -o init.o\nclang++ -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include   -fobjc-arc -fPIC   -c mac/FontManagerMac.mm -o mac/FontManagerMac.o\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\nIn file included from /Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:10:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:1: error: unknown type name 'constexpr'\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:19: error: expected ';' after top level declarator\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n                  ^\n                  ;\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:59:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = T;\n               ^\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:38:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), SEXP>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:39:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nSEXP unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:37:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:40:24: error: expected expression\n  static SEXP token = [] {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:8: error: expected expression\n      [](void* data) -> SEXP {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:14: error: expected '(' for function-style cast or type construction\n      [](void* data) -> SEXP {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:16: error: use of undeclared identifier 'data'\n      [](void* data) -> SEXP {\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:8: error: expected expression\n      [](void* jmpbuf, Rboolean jump) {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:14: error: expected '(' for function-style cast or type construction\n      [](void* jmpbuf, Rboolean jump) {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:24: error: unexpected type name 'Rboolean': expected expression\n      [](void* jmpbuf, Rboolean jump) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:76:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), void>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:77:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nvoid unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:75:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:78:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:87:19: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nunwind_protect(Fun&& code) {\n                  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                 ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:89:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:98:17: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <size_t...>\n                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:100:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = index_sequence;\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:106:22: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <std::size_t... I, std::size_t J>\n                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:47: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:117:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:6: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:17: error: no template named 'tuple' in namespace 'std'\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n           ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:31: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:122:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:67: error: no template named 'tuple' in namespace 'std'\n                                                             std::tuple<Aref...>&& a) {\n                                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:81: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                                                             std::tuple<Aref...>&& a) {\n                                                                                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:125:86: error: expected '(' for function-style cast or type construction\n  return apply(std::forward<F>(f), std::move(a), make_index_sequence<sizeof...(Aref)>{});\n                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:40: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:51: error: no template named 'tuple' in namespace 'std'\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:58: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:135:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:137:70: warning: reference qualifiers on functions are a C++11 extension [-Wc++11-extensions]\n  decltype(std::declval<F*>()(std::declval<Aref>()...)) operator()() && {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:141:8: error: no template named 'tuple' in namespace 'std'\n  std::tuple<Aref...> arefs_;\n  ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:149:23: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\n    template <typename... A>\n                      ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:47: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:70: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:3: error: unknown type name 'constexpr'\n  constexpr function<F> operator[](F* raw) const {\n  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:13: error: member 'function' declared as a template\n  constexpr function<F> operator[](F* raw) const {\n            ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:24: error: expected ';' at end of declaration list\n  constexpr function<F> operator[](F* raw) const {\n                       ^\n                       ;\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n30 warnings and 20 errors generated.\nmake: *** [mac/FontManagerMac.o] Error 1\nERROR: compilation failed for package ‘systemfonts’\n* removing ‘/private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/Rtmp00mGml/pkg-lib84d65837521/systemfonts’\n "},{"app_name":"183-report-cairo","status":"can_not_install","result":"Failed to install:\n * Cairo\n * htmltools\n * jsonlite\n * ragg\n * shiny\n * shinytest2\n * showtext\n * sysfonts\n * systemfonts\n \nError:\n Error : ! in callr subprocess.\nCaused by error: \n! error in pak subprocess\nCaused by error in `stop_task_build(state, worker)`:\n! Failed to build source package systemfonts.\nFull installation output:\n* installing *source* package ‘systemfonts’ ...\n** package ‘systemfonts’ successfully unpacked and MD5 sums checked\nstaged installation is only possible with locking\n** using non-staged installation\nFound pkg-config cflags and libs!\nUsing PKG_CFLAGS=-I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16\nUsing PKG_LIBS=-L/opt/homebrew/opt/freetype/lib -lfreetype -lbz2 -L/opt/homebrew/opt/libpng/lib -lpng16 -lz\n** libs\nusing C++ compiler: ‘Apple clang version 15.0.0 (clang-1500.3.9.4)’\nusing SDK: ‘’\nrm -f systemfonts.so caches.o cpp11.o dev_metrics.o font_matching.o font_local.o font_registry.o ft_cache.o string_shape.o font_metrics.o font_outlines.o font_fallback.o string_metrics.o emoji.o cache_store.o init.o mac/FontManagerMac.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c caches.cpp -o caches.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cpp11.cpp -o cpp11.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c dev_metrics.cpp -o dev_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_matching.cpp -o font_matching.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_local.cpp -o font_local.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_registry.cpp -o font_registry.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c ft_cache.cpp -o ft_cache.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_shape.cpp -o string_shape.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_metrics.cpp -o font_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_outlines.cpp -o font_outlines.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_fallback.cpp -o font_fallback.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_metrics.cpp -o string_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c emoji.cpp -o emoji.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cache_store.cpp -o cache_store.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c init.cpp -o init.o\nclang++ -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include   -fobjc-arc -fPIC   -c mac/FontManagerMac.mm -o mac/FontManagerMac.o\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\nIn file included from /Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:10:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:1: error: unknown type name 'constexpr'\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:19: error: expected ';' after top level declarator\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n                  ^\n                  ;\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:59:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = T;\n               ^\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:38:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), SEXP>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:39:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nSEXP unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:37:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:40:24: error: expected expression\n  static SEXP token = [] {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:8: error: expected expression\n      [](void* data) -> SEXP {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:14: error: expected '(' for function-style cast or type construction\n      [](void* data) -> SEXP {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:16: error: use of undeclared identifier 'data'\n      [](void* data) -> SEXP {\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:8: error: expected expression\n      [](void* jmpbuf, Rboolean jump) {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:14: error: expected '(' for function-style cast or type construction\n      [](void* jmpbuf, Rboolean jump) {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:24: error: unexpected type name 'Rboolean': expected expression\n      [](void* jmpbuf, Rboolean jump) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:76:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), void>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:77:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nvoid unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:75:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:78:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:87:19: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nunwind_protect(Fun&& code) {\n                  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                 ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:89:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:98:17: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <size_t...>\n                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:100:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = index_sequence;\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:106:22: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <std::size_t... I, std::size_t J>\n                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:47: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:117:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:6: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:17: error: no template named 'tuple' in namespace 'std'\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n           ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:31: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:122:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:67: error: no template named 'tuple' in namespace 'std'\n                                                             std::tuple<Aref...>&& a) {\n                                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:81: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                                                             std::tuple<Aref...>&& a) {\n                                                                                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:125:86: error: expected '(' for function-style cast or type construction\n  return apply(std::forward<F>(f), std::move(a), make_index_sequence<sizeof...(Aref)>{});\n                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:40: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:51: error: no template named 'tuple' in namespace 'std'\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:58: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:135:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:137:70: warning: reference qualifiers on functions are a C++11 extension [-Wc++11-extensions]\n  decltype(std::declval<F*>()(std::declval<Aref>()...)) operator()() && {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:141:8: error: no template named 'tuple' in namespace 'std'\n  std::tuple<Aref...> arefs_;\n  ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:149:23: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\n    template <typename... A>\n                      ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:47: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:70: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:3: error: unknown type name 'constexpr'\n  constexpr function<F> operator[](F* raw) const {\n  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:13: error: member 'function' declared as a template\n  constexpr function<F> operator[](F* raw) const {\n            ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:24: error: expected ';' at end of declaration list\n  constexpr function<F> operator[](F* raw) const {\n                       ^\n                       ;\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n30 warnings and 20 errors generated.\nmake: *** [mac/FontManagerMac.o] Error 1\nERROR: compilation failed for package ‘systemfonts’\n* removing ‘/private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/RtmpKe48F7/pkg-lib8b3f28824b00/systemfonts’\n "},{"app_name":"184-report-ragg","status":"can_not_install","result":"Failed to install:\n * Cairo\n * htmltools\n * jsonlite\n * ragg\n * shiny\n * shinytest2\n * showtext\n * sysfonts\n * systemfonts\n \nError:\n Error : ! in callr subprocess.\nCaused by error: \n! error in pak subprocess\nCaused by error in `stop_task_build(state, worker)`:\n! Failed to build source package systemfonts.\nFull installation output:\n* installing *source* package ‘systemfonts’ ...\n** package ‘systemfonts’ successfully unpacked and MD5 sums checked\nstaged installation is only possible with locking\n** using non-staged installation\nFound pkg-config cflags and libs!\nUsing PKG_CFLAGS=-I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16\nUsing PKG_LIBS=-L/opt/homebrew/opt/freetype/lib -lfreetype -lbz2 -L/opt/homebrew/opt/libpng/lib -lpng16 -lz\n** libs\nusing C++ compiler: ‘Apple clang version 15.0.0 (clang-1500.3.9.4)’\nusing SDK: ‘’\nrm -f systemfonts.so caches.o cpp11.o dev_metrics.o font_matching.o font_local.o font_registry.o ft_cache.o string_shape.o font_metrics.o font_outlines.o font_fallback.o string_metrics.o emoji.o cache_store.o init.o mac/FontManagerMac.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c caches.cpp -o caches.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cpp11.cpp -o cpp11.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c dev_metrics.cpp -o dev_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_matching.cpp -o font_matching.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_local.cpp -o font_local.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_registry.cpp -o font_registry.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c ft_cache.cpp -o ft_cache.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_shape.cpp -o string_shape.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_metrics.cpp -o font_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_outlines.cpp -o font_outlines.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c font_fallback.cpp -o font_fallback.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c string_metrics.cpp -o string_metrics.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c emoji.cpp -o emoji.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c cache_store.cpp -o cache_store.o\nclang++ -arch arm64 -std=gnu++17 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include    -fPIC  -falign-functions=64 -Wall -g -O2  -Wall -pedantic -c init.cpp -o init.o\nclang++ -arch arm64 -I\"/Library/Frameworks/R.framework/Resources/include\" -DNDEBUG -I/opt/homebrew/opt/freetype/include/freetype2 -I/opt/homebrew/opt/libpng/include/libpng16 -I'/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include' -I/opt/R/arm64/include   -fobjc-arc -fPIC   -c mac/FontManagerMac.mm -o mac/FontManagerMac.o\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\nIn file included from /Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:10:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:1: error: unknown type name 'constexpr'\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:52:19: error: expected ';' after top level declarator\nconstexpr R_xlen_t operator\"\" _xl(unsigned long long int value) { return value; }\n                  ^\n                  ;\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/R.hpp:59:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = T;\n               ^\nIn file included from mac/FontManagerMac.mm:5:\nIn file included from mac/../FontDescriptor.h:11:\nIn file included from mac/../utils.h:9:\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:38:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), SEXP>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:39:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nSEXP unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:37:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:40:24: error: expected expression\n  static SEXP token = [] {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:8: error: expected expression\n      [](void* data) -> SEXP {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:14: error: expected '(' for function-style cast or type construction\n      [](void* data) -> SEXP {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:52:16: error: use of undeclared identifier 'data'\n      [](void* data) -> SEXP {\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:8: error: expected expression\n      [](void* jmpbuf, Rboolean jump) {\n       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:14: error: expected '(' for function-style cast or type construction\n      [](void* jmpbuf, Rboolean jump) {\n         ~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:57:24: error: unexpected type name 'Rboolean': expected expression\n      [](void* jmpbuf, Rboolean jump) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:76:54: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                            decltype(std::declval<Fun&&>()()), void>::value>::type>\n                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:77:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nvoid unwind_protect(Fun&& code) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:75:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename = typename std::enable_if<std::is_same<\n                                 ^ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:78:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:87:19: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\nunwind_protect(Fun&& code) {\n                  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:84:34: warning: default template arguments for a function template are a C++11 extension [-Wc++11-extensions]\ntemplate <typename Fun, typename R = decltype(std::declval<Fun&&>()())>\n                                 ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:89:26: error: expected expression\n  (void)unwind_protect([&] {\n                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:98:17: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <size_t...>\n                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:100:16: warning: alias declarations are a C++11 extension [-Wc++11-extensions]\n  using type = index_sequence;\n               ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:106:22: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <std::size_t... I, std::size_t J>\n                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:116:47: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref, size_t... I>\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:117:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:6: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:17: error: no template named 'tuple' in namespace 'std'\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n           ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:118:31: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    F&& f, std::tuple<Aref...>&& a, const index_sequence<I...>&) {\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:122:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:123:63: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()(std::declval<Aref>()...)) apply(F&& f,\n                                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:67: error: no template named 'tuple' in namespace 'std'\n                                                             std::tuple<Aref...>&& a) {\n                                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:124:81: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n                                                             std::tuple<Aref...>&& a) {\n                                                                                ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:125:86: error: expected '(' for function-style cast or type construction\n  return apply(std::forward<F>(f), std::move(a), make_index_sequence<sizeof...(Aref)>{});\n                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:24: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:40: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                       ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:51: error: no template named 'tuple' in namespace 'std'\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                             ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:131:58: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\ndecltype(std::declval<F&&>()()) apply(F&& f, std::tuple<>&&) {\n                                                         ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:135:31: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\ntemplate <typename F, typename... Aref>\n                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:137:70: warning: reference qualifiers on functions are a C++11 extension [-Wc++11-extensions]\n  decltype(std::declval<F*>()(std::declval<Aref>()...)) operator()() && {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:141:8: error: no template named 'tuple' in namespace 'std'\n  std::tuple<Aref...> arefs_;\n  ~~~~~^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:149:23: warning: variadic templates are a C++11 extension [-Wc++11-extensions]\n    template <typename... A>\n                      ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:47: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                              ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:150:70: warning: rvalue references are a C++11 extension [-Wc++11-extensions]\n    decltype(std::declval<F*>()(std::declval<A&&>()...)) operator()(A&&... a) const {\n                                                                     ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:3: error: unknown type name 'constexpr'\n  constexpr function<F> operator[](F* raw) const {\n  ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:13: error: member 'function' declared as a template\n  constexpr function<F> operator[](F* raw) const {\n            ^\n/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/cpp11/include/cpp11/protect.hpp:164:24: error: expected ';' at end of declaration list\n  constexpr function<F> operator[](F* raw) const {\n                       ^\n                       ;\nfatal error: too many errors emitted, stopping now [-ferror-limit=]\n30 warnings and 20 errors generated.\nmake: *** [mac/FontManagerMac.o] Error 1\nERROR: compilation failed for package ‘systemfonts’\n* removing ‘/private/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T/RtmpnS6SLO/pkg-lib924c3ca690e/systemfonts’\n "},{"app_name":"185-report-theme","status":"fail","result":"\n###\nRunning tests for app: 185-report-theme\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 185-report-theme\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:40712/index.Rmd?shinyjster=1' 120 \\\n  --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 185-report-theme\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/185-report-theme\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 97\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x13965a5d0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language rmarkdown::run(appDir, shiny_args = list(port = port, host = host, launch.browser = FALSE))\n  .. .. ..$ : language do.call(shiny::runApp, shiny_args)\n  .. .. ..$ : language (function (appDir = getwd(), port = getOption(\"shiny.port\"), launch.browser = getOption(\"shiny.launch.browser\",  | __truncated__ ...\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:97] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"3ad914ede6e73ebbf06f01c248f66930\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 185-report-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/185-report-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 185-report-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/185-report-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 185-report-theme\n###"},{"app_name":"186-rdir-sortc","status":"fail","result":"\n###\nRunning tests for app: 186-rdir-sortc\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | server                                                         \n⠋ |          1 | server                                                         \n✔ |          1 | server\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 186-rdir-sortc\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:2898/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 186-rdir-sortc\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/186-rdir-sortc\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1178b9c70> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 186-rdir-sortc - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/186-rdir-sortc - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 186-rdir-sortc - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/186-rdir-sortc - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 3 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 186-rdir-sortc\n###"},{"app_name":"187-navbar-collapse","status":"fail","result":"\n###\nRunning tests for app: 187-navbar-collapse\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 187-navbar-collapse\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 550x700 'http://127.0.0.1:43822/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 187-navbar-collapse\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"No theme\", dimensions = \"550x700\", browsers = browsers)\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 4 1 4 88 1 88 4 4\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1191d6850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\nshinyjster - starting app: 187-navbar-collapse\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 550x700 'http://127.0.0.1:1580/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 187-navbar-collapse\n\n⠴ | 1    2   3 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 101\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language local({     old_theme <- bs_global_set(bs_theme()) ...\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 6 1 10 2 1 2 6 10\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1191d6850> \n  .. .. ..$ : language eval.parent(substitute(eval(quote(expr), envir)))\n  .. .. ..$ : language eval(expr, p)\n  .. .. ..$ : language eval(expr, p)\n  .. .. ..$ : language eval(quote({     old_theme <- bs_global_set(bs_theme()) ...\n  .. .. ..$ : language eval(quote({     old_theme <- bs_global_set(bs_theme()) ...\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"bs4\", dimensions = \"550x700\", browsers = browsers)\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 9 3 9 85 3 85 9 9\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1191d6850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. .. [list output truncated]\n  .. .. ..- attr(*, \"parents\")= int [1:101] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"21fa447b0a1f3b951b285d815c2ec254\"\n $ browser    : chr \"chrome\"\n\n✖ | 2    4   4 | shinyjster [20.3s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:4:1'): 187-navbar-collapse - shinyjster - chrome - No theme\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\nError ('test-shinyjster.R:9:3'): 187-navbar-collapse - shinyjster - chrome - bs4\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 20.3 s\n\n── Skipped tests (4) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (2): 'test-shinyjster.R:4:1',\n  'test-shinyjster.R:9:3'\n• Not testing Firefox on macOS (2): 'test-shinyjster.R:4:1',\n  'test-shinyjster.R:9:3'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:4:1'): 187-navbar-collapse - shinyjster - chrome - No theme\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\nError ('test-shinyjster.R:9:3'): 187-navbar-collapse - shinyjster - chrome - bs4\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/187-navbar-collapse - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 2 | WARN 0 | SKIP 4 | PASS 4 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 187-navbar-collapse\n###"},{"app_name":"188-encoding","status":"pass","result":"\n###\nRunning tests for app: 188-encoding\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n✔ |   2      4 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:9:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.9 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 188-encoding\n###"},{"app_name":"189-ui-http-response","status":"fail","result":"\n###\nRunning tests for app: 189-ui-http-response\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 189-ui-http-response\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:45480/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 189-ui-http-response\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/189-ui-http-response\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11ae00a50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 189-ui-http-response - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/189-ui-http-response - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 189-ui-http-response - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/189-ui-http-response - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 189-ui-http-response\n###"},{"app_name":"190-reactlog-module-ex1","status":"pass","result":"\n###\nRunning tests for app: 190-reactlog-module-ex1\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   2      1 | mytest                                                         \n✔ |   2      2 | mytest [8.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:12:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.8 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 190-reactlog-module-ex1\n###"},{"app_name":"191-reactlog-pythagoras","status":"pass","result":"\n###\nRunning tests for app: 191-reactlog-pythagoras\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   2      1 | mytest                                                         \n✔ |   2      2 | mytest [8.3s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:10:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.3 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 191-reactlog-pythagoras\n###"},{"app_name":"192-reactlog-hello","status":"pass","result":"\n###\nRunning tests for app: 192-reactlog-hello\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   2      1 | mytest                                                         \n✔ |   2      2 | mytest [10.7s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:19:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:19:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/002_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 2 ]\n\nStopping tests for app: 192-reactlog-hello\n###"},{"app_name":"193-reactlog-dynamic-ui","status":"pass","result":"\n###\nRunning tests for app: 193-reactlog-dynamic-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |      1   0 | mytest                                                         \n✔ |      1   0 | mytest [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-mytest.R:14:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 193-reactlog-dynamic-ui\n###"},{"app_name":"194-reactlog-plot-cache-key","status":"pass","result":"\n###\nRunning tests for app: 194-reactlog-plot-cache-key\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   2      1 | mytest                                                         \n⠼ |   3      2 | mytest                                                         \n⠦ |   4      3 | mytest                                                         \n⠇ |   5      4 | mytest                                                         \n✔ |   5      5 | mytest [26.5s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:14:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:14:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/002_.png'\n\nWarning ('test-mytest.R:14:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:14:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/004_.png'\n\nWarning ('test-mytest.R:14:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 26.5 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 5 ]\n\nStopping tests for app: 194-reactlog-plot-cache-key\n###"},{"app_name":"195-radio-empty","status":"pass","result":"\n###\nRunning tests for app: 195-radio-empty\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n✔ |   3      6 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:18:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.6 s\n\n[ FAIL 0 | WARN 3 | SKIP 0 | PASS 6 ]\n\n🧿 Your tests look perfect 🧿\n\nStopping tests for app: 195-radio-empty\n###"},{"app_name":"200-flexdashboard-render-text","status":"pass","result":"\n###\nRunning tests for app: 200-flexdashboard-render-text\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     \n✔ |      1   0 | shinyjster\n\n══ Results ═════════════════════════════════════════════════════════════════════\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• .Platform$OS.type != \"windows\" is TRUE (1): 'test-shinyjster.R:1:1'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 200-flexdashboard-render-text\n###"},{"app_name":"205-dynamic-tabs-compat","status":"pass","result":"\n###\nRunning tests for app: 205-dynamic-tabs-compat\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | themes                                                         \n⠋ |   1      0 | themes                                                         \n⠸ |   2      2 | themes                                                         \n⠴ |   2      4 | themes                                                         \n⠦ |   3      4 | themes                                                         \n⠇ |   3      6 | themes                                                         \n⠙ |   4      8 | themes                                                         \n⠹ |   5      8 | themes                                                         \n⠼ |   5     10 | themes                                                         \n⠴ |   6     10 | themes                                                         \n⠧ |   6     12 | themes                                                         \n⠇ |   7     12 | themes                                                         \n⠋ |   7     14 | themes                                                         \n⠹ |   8     15 | themes                                                         \n⠸ |   8     16 | themes                                                         \n✔ |   8     16 | themes [12.4s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-themes.R:28:7'): cosmo4\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo4-001_.png'\n\nWarning ('test-themes.R:39:7'): cosmo4\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo4-003_.png'\n\nWarning ('test-themes.R:47:7'): cosmo4\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo4-005_.png'\n\nWarning ('test-themes.R:52:7'): cosmo4\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo4-007_.png'\n\nWarning ('test-themes.R:28:7'): cosmo5\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo5-001_.png'\n\nWarning ('test-themes.R:39:7'): cosmo5\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo5-003_.png'\n\nWarning ('test-themes.R:47:7'): cosmo5\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo5-005_.png'\n\nWarning ('test-themes.R:52:7'): cosmo5\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/cosmo5-007_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 12.4 s\n\n[ FAIL 0 | WARN 8 | SKIP 0 | PASS 16 ]\n\nStopping tests for app: 205-dynamic-tabs-compat\n###"},{"app_name":"206-freeze-thaw","status":"fail","result":"\n###\nRunning tests for app: 206-freeze-thaw\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 206-freeze-thaw\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:48249/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 206-freeze-thaw\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/206-freeze-thaw\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12e97d050> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 206-freeze-thaw - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/206-freeze-thaw - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 206-freeze-thaw - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/206-freeze-thaw - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 206-freeze-thaw\n###"},{"app_name":"207-freeze-invalidate","status":"fail","result":"\n###\nRunning tests for app: 207-freeze-invalidate\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 207-freeze-invalidate\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:21525/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 207-freeze-invalidate\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/207-freeze-invalidate\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11eef6e50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 207-freeze-invalidate - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/207-freeze-invalidate - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 207-freeze-invalidate - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/207-freeze-invalidate - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 207-freeze-invalidate\n###"},{"app_name":"208-bind-cache-event","status":"fail","result":"\n###\nRunning tests for app: 208-bind-cache-event\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 208-bind-cache-event\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:49060/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 208-bind-cache-event\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/208-bind-cache-event\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1221c8a50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 208-bind-cache-event - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/208-bind-cache-event - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 208-bind-cache-event - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/208-bind-cache-event - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 208-bind-cache-event\n###"},{"app_name":"209-datepicker","status":"fail","result":"\n###\nRunning tests for app: 209-datepicker\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 209-datepicker\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:10258/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 209-datepicker\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/209-datepicker\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x132343a50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 209-datepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/209-datepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 209-datepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/209-datepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 209-datepicker\n###"},{"app_name":"210-future_promise","status":"fail","result":"\n###\nRunning tests for app: 210-future_promise\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 210-future_promise\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:45871/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 210-future_promise\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/210-future_promise\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 33 1 33 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1316cd250> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.2s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 210-future_promise - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/210-future_promise - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:3:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:3:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 210-future_promise - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/210-future_promise - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 210-future_promise\n###"},{"app_name":"211-sv-custom-inputs","status":"fail","result":"\n###\nRunning tests for app: 211-sv-custom-inputs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 211-sv-custom-inputs\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:2493/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 211-sv-custom-inputs\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/211-sv-custom-inputs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x119d954f0> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 211-sv-custom-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/211-sv-custom-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 211-sv-custom-inputs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/211-sv-custom-inputs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 211-sv-custom-inputs\n###"},{"app_name":"212-daterangepicker","status":"fail","result":"\n###\nRunning tests for app: 212-daterangepicker\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 212-daterangepicker\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:18434/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 212-daterangepicker\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/212-daterangepicker\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1296e9650> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 212-daterangepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/212-daterangepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 212-daterangepicker - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/212-daterangepicker - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 212-daterangepicker\n###"},{"app_name":"213-tab-panels","status":"fail","result":"\n###\nRunning tests for app: 213-tab-panels\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |          1 | mytest                                                         \n⠹ |          3 | mytest                                                         \n⠼ |          5 | mytest                                                         \n⠦ |          7 | mytest                                                         \n⠇ | 1        8 | mytest                                                         \n⠏ | 1        9 | mytest                                                         \n⠋ | 1       10 | mytest                                                         \n⠙ | 1       11 | mytest                                                         \n⠹ | 1       12 | mytest                                                         \n⠼ | 2       13 | mytest                                                         \n✖ | 3       13 | mytest [4.2s]\n────────────────────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:24:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/014.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:46:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/016.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:46:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 4.2 s\n\n── Failed tests ────────────────────────────────────────────────────────────────\nFailure ('test-mytest.R:24:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/008.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:24:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:41:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/014.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:41:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\nFailure ('test-mytest.R:46:3'): Migrated shinytest test: mytest.R\nSnapshot of `file` to 'mytest/016.png' has changed\nRun `testthat::snapshot_review('mytest/')` to review changes\nBacktrace:\n    ▆\n 1. └─app$expect_screenshot() at test-mytest.R:46:3\n 2.   └─shinytest2:::app_expect_screenshot_and_variant(...)\n 3.     └─shinytest2:::app_expect_screenshot(self, private, ...)\n 4.       └─shinytest2:::app__expect_snapshot_file(...)\n 5.         ├─base::withCallingHandlers(...)\n 6.         └─testthat::expect_snapshot_file(...)\n\n[ FAIL 3 | WARN 0 | SKIP 0 | PASS 13 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 213-tab-panels\n###"},{"app_name":"214-render-script-attrs","status":"fail","result":"\n###\nRunning tests for app: 214-render-script-attrs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 214-render-script-attrs\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:1385/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 214-render-script-attrs\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/214-render-script-attrs\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x13037a650> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 214-render-script-attrs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/214-render-script-attrs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 214-render-script-attrs - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/214-render-script-attrs - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 214-render-script-attrs\n###"},{"app_name":"215-bslib-nav","status":"pass","result":"\n###\nRunning tests for app: 215-bslib-nav\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n✔ |   2      4 | mytest [2.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:15:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:15:5'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.0 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 215-bslib-nav\n###"},{"app_name":"216-quosures","status":"pass","result":"\n###\nRunning tests for app: 216-quosures\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n✔ |   2      4 | mytest [3.1s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:12:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.2 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 216-quosures\n###"},{"app_name":"218-insert-ui-jquery","status":"pass","result":"\n###\nRunning tests for app: 218-insert-ui-jquery\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinytest2                                                     \n⠋ |          1 | shinytest2                                                     \n✔ |          1 | shinytest2 [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 218-insert-ui-jquery\n###"},{"app_name":"219-sliders-date","status":"pass","result":"\n###\nRunning tests for app: 219-sliders-date\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠴ |   2      4 | mytest                                                         \n✔ |   2      4 | mytest [2.6s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:6:3'): {shinytest2} recording: mytest\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:19:3'): {shinytest2} recording: mytest\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.7 s\n\n[ FAIL 0 | WARN 2 | SKIP 0 | PASS 4 ]\n\nStopping tests for app: 219-sliders-date\n###"},{"app_name":"220-execute-hidden-plot","status":"fail","result":"\n###\nRunning tests for app: 220-execute-hidden-plot\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 220-execute-hidden-plot\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:27806/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 220-execute-hidden-plot\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/220-execute-hidden-plot\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"Execute hidden plot\")\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 54 1 54 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12c869c50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 220-execute-hidden-plot - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/220-execute-hidden-plot - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 220-execute-hidden-plot - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/220-execute-hidden-plot - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 220-execute-hidden-plot\n###"},{"app_name":"221-async-script-dynamic-ui","status":"fail","result":"\n###\nRunning tests for app: 221-async-script-dynamic-ui\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 221-async-script-dynamic-ui\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:3415/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 221-async-script-dynamic-ui\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/221-async-script-dynamic-ui\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 4 5 4 37 5 37 4 4\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x121e02050> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:4:5'): 221-async-script-dynamic-ui - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/221-async-script-dynamic-ui - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:4:5'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:4:5'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:4:5'): 221-async-script-dynamic-ui - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/221-async-script-dynamic-ui - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\n\nKeep trying!\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 221-async-script-dynamic-ui\n###"},{"app_name":"222-shinyoptions","status":"fail","result":"\n###\nRunning tests for app: 222-shinyoptions\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 222-shinyoptions\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:40904/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 222-shinyoptions\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/222-shinyoptions\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12f9ec650> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 222-shinyoptions - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/222-shinyoptions - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 222-shinyoptions - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/222-shinyoptions - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 222-shinyoptions\n###"},{"app_name":"223-set-current-theme","status":"fail","result":"\n###\nRunning tests for app: 223-set-current-theme\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 223-set-current-theme\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:38918/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 223-set-current-theme\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/223-set-current-theme\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(browsers = c(\"chrome\", \"firefox\", \"edge\"))\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 74 1 74 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11661e608> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 223-set-current-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/223-set-current-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 223-set-current-theme - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/223-set-current-theme - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 223-set-current-theme\n###"},{"app_name":"224-shinymeta","status":"fail","result":"\n###\nRunning tests for app: 224-shinymeta\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 224-shinymeta\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:17629/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 224-shinymeta\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/224-shinymeta\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(browsers = c(\"chrome\", \"firefox\"))\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 3 1 3 66 1 66 3 3\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x12e049a50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    1   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 224-shinymeta - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/224-shinymeta - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:3:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:3:1'): 224-shinymeta - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/224-shinymeta - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 1 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 224-shinymeta\n###"},{"app_name":"225-snapshot-info-option","status":"pass","result":"\n###\nRunning tests for app: 225-snapshot-info-option\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | tests                                                          \n⠋ |          1 | tests                                                          \n✔ |          1 | tests [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 225-snapshot-info-option\n###"},{"app_name":"226-snapshot-info-url","status":"pass","result":"\n###\nRunning tests for app: 226-snapshot-info-url\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | tests                                                          \n⠋ |          1 | tests                                                          \n✔ |          1 | tests [2.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 1 ]\n\nStopping tests for app: 226-snapshot-info-url\n###"},{"app_name":"227-persistent-progress","status":"fail","result":"\n###\nRunning tests for app: 227-persistent-progress\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 227-persistent-progress\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:12589/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 227-persistent-progress\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/227-persistent-progress\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x10a3baa50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 227-persistent-progress - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/227-persistent-progress - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.2 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 227-persistent-progress - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/227-persistent-progress - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 227-persistent-progress\n###"},{"app_name":"301-bs-themes","status":"pass","result":"\n###\nRunning tests for app: 301-bs-themes\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | themes                                                         \n⠋ |      1   0 | themes                                                         \n✔ |      1   0 | themes [2.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.0 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-themes.R:11:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 301-bs-themes\n###"},{"app_name":"302-bootswatch-themes","status":"pass","result":"\n###\nRunning tests for app: 302-bootswatch-themes\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | themes                                                         \n⠋ |      1   0 | themes                                                         \n✔ |      1   0 | themes [2.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.0 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-themes.R:15:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 302-bootswatch-themes\n###"},{"app_name":"303-bslib-html-template","status":"pass","result":"\n###\nRunning tests for app: 303-bslib-html-template\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | mytest                                                         \n⠋ |   1      0 | mytest                                                         \n⠹ |   1      2 | mytest                                                         \n⠸ |   2      2 | mytest                                                         \n⠦ |   3      4 | mytest                                                         \n⠏ |   4      6 | mytest                                                         \n⠹ |   5      8 | mytest                                                         \n✔ |   5     10 | mytest [5.9s]\n────────────────────────────────────────────────────────────────────────────────\nWarning ('test-mytest.R:10:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/001_.png'\n\nWarning ('test-mytest.R:17:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/003_.png'\n\nWarning ('test-mytest.R:30:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/005_.png'\n\nWarning ('test-mytest.R:38:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/007_.png'\n\nWarning ('test-mytest.R:44:3'): Migrated shinytest test: mytest.R\nAdding new file snapshot: 'tests/testthat/_snaps/mac-4.3/009_.png'\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.9 s\n\n[ FAIL 0 | WARN 5 | SKIP 0 | PASS 10 ]\n\nStopping tests for app: 303-bslib-html-template\n###"},{"app_name":"304-bslib-card","status":"pass","result":"\n###\nRunning tests for app: 304-bslib-card\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinytest2                                                     \n⠋ |      1   0 | shinytest2                                                     \n✔ |      1   0 | shinytest2 [2.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.0 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-shinytest2.R:11:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 304-bslib-card\n###"},{"app_name":"305-bslib-value-box","status":"pass","result":"\n###\nRunning tests for app: 305-bslib-value-box\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinytest2                                                     \n⠋ |      1   0 | shinytest2                                                     \n✔ |      1   0 | shinytest2 [2.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 2.0 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Not mac + r-release (1): 'test-shinytest2.R:11:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 305-bslib-value-box\n###"},{"app_name":"306-accordion-add-remove","status":"pass","result":"\n###\nRunning tests for app: 306-accordion-add-remove\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 306-accordion-add-remove                                       \n⠋ |          1 | 306-accordion-add-remove                                       \n⠙ |          2 | 306-accordion-add-remove                                       \n⠹ |          3 | 306-accordion-add-remove                                       \n⠸ |          4 | 306-accordion-add-remove                                       \n⠴ |          6 | 306-accordion-add-remove                                       \n⠧ |          8 | 306-accordion-add-remove                                       \n⠏ |         10 | 306-accordion-add-remove                                       \n⠙ |         12 | 306-accordion-add-remove                                       \n⠸ |         14 | 306-accordion-add-remove                                       \n⠼ |         15 | 306-accordion-add-remove                                       \n⠴ |         16 | 306-accordion-add-remove                                       \n⠦ |         17 | 306-accordion-add-remove                                       \n⠧ |         18 | 306-accordion-add-remove                                       \n⠏ |         20 | 306-accordion-add-remove                                       \n⠙ |         22 | 306-accordion-add-remove                                       \n⠸ |         24 | 306-accordion-add-remove                                       \n✔ |         24 | 306-accordion-add-remove [15.6s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 15.6 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 24 ]\n\nStopping tests for app: 306-accordion-add-remove\n###"},{"app_name":"307-accordion-replace","status":"fail","result":"\n###\nRunning tests for app: 307-accordion-replace\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 307-accordion-replace\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:7958/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 307-accordion-replace\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/307-accordion-replace\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster(\"Execute hidden plot\")\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 54 1 54 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x11995e050> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 307-accordion-replace - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/307-accordion-replace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 307-accordion-replace - shinyjster - chrome - Execute hidden plot\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/307-accordion-replace - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\n\nFrustration is a natural part of programming :)\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 307-accordion-replace\n###"},{"app_name":"308-sidebar-kitchen-sink","status":"pass","result":"\n###\nRunning tests for app: 308-sidebar-kitchen-sink\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 308-sidebar-kitchen-sink                                       \n⠋ |      1   0 | 308-sidebar-kitchen-sink                                       \n✔ |      1   0 | 308-sidebar-kitchen-sink [6.6s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.6 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• empty test (1): 'test-308-sidebar-kitchen-sink.R:16:1'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 0 ]\n\nStopping tests for app: 308-sidebar-kitchen-sink\n###"},{"app_name":"309-flexdashboard-tabs-navs","status":"pass","result":"\n###\nRunning tests for app: 309-flexdashboard-tabs-navs\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 309-flexdashboard-tabs-navs                                    \n⠋ |          1 | 309-flexdashboard-tabs-navs                                    \n⠧ |         18 | 309-flexdashboard-tabs-navs                                    \n⠴ |         36 | 309-flexdashboard-tabs-navs                                    \n⠹ |         53 | 309-flexdashboard-tabs-navs                                    \n⠋ |         71 | 309-flexdashboard-tabs-navs                                    \n⠧ |         88 | 309-flexdashboard-tabs-navs                                    \n✔ |        105 | 309-flexdashboard-tabs-navs [8.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 8.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 105 ]\n\nStopping tests for app: 309-flexdashboard-tabs-navs\n###"},{"app_name":"310-bslib-sidebar-dynamic","status":"pass","result":"\n###\nRunning tests for app: 310-bslib-sidebar-dynamic\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 310-bslib-sidebar-dynamic                                      \n⠋ |          1 | 310-bslib-sidebar-dynamic                                      \n⠏ |         10 | 310-bslib-sidebar-dynamic                                      \n⠦ |         17 | 310-bslib-sidebar-dynamic                                      \n⠸ |         24 | 310-bslib-sidebar-dynamic                                      \n⠋ |         31 | 310-bslib-sidebar-dynamic                                      \n⠇ |         39 | 310-bslib-sidebar-dynamic                                      \n⠧ |         48 | 310-bslib-sidebar-dynamic                                      \n⠼ |         55 | 310-bslib-sidebar-dynamic                                      \n⠹ |         63 | 310-bslib-sidebar-dynamic                                      \n⠋ |         71 | 310-bslib-sidebar-dynamic                                      \n✔ |         78 | 310-bslib-sidebar-dynamic [7.0s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.0 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 78 ]\n\nStopping tests for app: 310-bslib-sidebar-dynamic\n###"},{"app_name":"311-bslib-sidebar-toggle-methods","status":"pass","result":"\n###\nRunning tests for app: 311-bslib-sidebar-toggle-methods\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinytest2                                                     \n⠋ |          1 | shinytest2                                                     \n⠸ |          4 | shinytest2                                                     \n⠹ |         13 | shinytest2                                                     \n⠸ |         24 | shinytest2                                                     \n⠋ |         31 | shinytest2                                                     \n⠧ |         38 | shinytest2                                                     \n✔ |         44 | shinytest2 [6.8s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 6.8 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 44 ]\n\nStopping tests for app: 311-bslib-sidebar-toggle-methods\n###"},{"app_name":"313-bslib-card-tab-focus","status":"pass","result":"\n###\nRunning tests for app: 313-bslib-card-tab-focus\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 313-bslib-card-tab-focus                                       \n⠋ |          1 | 313-bslib-card-tab-focus                                       \n⠋ |         11 | 313-bslib-card-tab-focus                                       \n⠴ |         26 | 313-bslib-card-tab-focus                                       \n⠴ |         36 | 313-bslib-card-tab-focus                                       \n⠧ |         48 | 313-bslib-card-tab-focus                                       \n⠼ |         55 | 313-bslib-card-tab-focus                                       \n⠹ |         63 | 313-bslib-card-tab-focus                                       \n⠧ |         78 | 313-bslib-card-tab-focus                                       \n⠦ |         87 | 313-bslib-card-tab-focus                                       \n⠸ |         94 | 313-bslib-card-tab-focus                                       \n⠼ |         95 | 313-bslib-card-tab-focus                                       \n⠧ |         98 | 313-bslib-card-tab-focus                                       \n⠇ |         99 | 313-bslib-card-tab-focus                                       \n⠼ |        105 | 313-bslib-card-tab-focus                                       \n⠴ |        106 | 313-bslib-card-tab-focus                                       \n✔ |        106 | 313-bslib-card-tab-focus [7.8s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.8 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 106 ]\n\nStopping tests for app: 313-bslib-card-tab-focus\n###"},{"app_name":"314-bslib-tooltips","status":"pass","result":"\n###\nRunning tests for app: 314-bslib-tooltips\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 314-bslib-tooltips                                             \n⠋ |          1 | 314-bslib-tooltips                                             \n⠴ |          6 | 314-bslib-tooltips                                             \n⠦ |          7 | 314-bslib-tooltips                                             \n⠧ |          8 | 314-bslib-tooltips                                             \n⠇ |          9 | 314-bslib-tooltips                                             \n⠏ |         10 | 314-bslib-tooltips                                             \n⠋ |         11 | 314-bslib-tooltips                                             \n⠹ |         13 | 314-bslib-tooltips                                             \n⠸ |      1  13 | 314-bslib-tooltips                                             \n✔ |      1  13 | 314-bslib-tooltips [5.7s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 5.7 s\n\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• empty test (1): 'test-314-bslib-tooltips.R:108:1'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 13 ]\n\n😸\n\nStopping tests for app: 314-bslib-tooltips\n###"},{"app_name":"315-bslib-input-switch","status":"pass","result":"\n###\nRunning tests for app: 315-bslib-input-switch\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 315-bslib-input-switch                                         \n⠋ |          1 | 315-bslib-input-switch                                         \n⠹ |          3 | 315-bslib-input-switch                                         \n⠴ |          6 | 315-bslib-input-switch                                         \n⠋ |         11 | 315-bslib-input-switch                                         \n✔ |         14 | 315-bslib-input-switch [3.1s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 3.1 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 14 ]\n\nStopping tests for app: 315-bslib-input-switch\n###"},{"app_name":"316-bslib-popovers","status":"pass","result":"\n###\nRunning tests for app: 316-bslib-popovers\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 316-bslib-popovers                                             \n⠋ |          1 | 316-bslib-popovers                                             \n⠴ |          6 | 316-bslib-popovers                                             \n⠴ |         16 | 316-bslib-popovers                                             \n⠴ |         26 | 316-bslib-popovers                                             \n⠏ |         30 | 316-bslib-popovers                                             \n⠸ |         34 | 316-bslib-popovers                                             \n⠧ |         38 | 316-bslib-popovers                                             \n⠋ |         41 | 316-bslib-popovers                                             \n⠹ |         43 | 316-bslib-popovers                                             \n⠼ |         45 | 316-bslib-popovers                                             \n⠦ |         47 | 316-bslib-popovers                                             \n⠇ |         49 | 316-bslib-popovers                                             \n⠋ |         51 | 316-bslib-popovers                                             \n⠙ |         52 | 316-bslib-popovers                                             \n⠹ |         53 | 316-bslib-popovers                                             \n⠧ |         58 | 316-bslib-popovers                                             \n⠹ |         63 | 316-bslib-popovers                                             \n⠴ |         66 | 316-bslib-popovers                                             \n⠏ |         70 | 316-bslib-popovers                                             \n⠴ |         76 | 316-bslib-popovers                                             \n⠹ |         83 | 316-bslib-popovers                                             \n⠙ |         92 | 316-bslib-popovers                                             \n✔ |         92 | 316-bslib-popovers [9.4s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 9.4 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 92 ]\n\nNice code.\n\nStopping tests for app: 316-bslib-popovers\n###"},{"app_name":"317-nav-insert","status":"pass","result":"\n###\nRunning tests for app: 317-nav-insert\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 317-nav-insert                                                 \n⠋ |          1 | 317-nav-insert                                                 \n⠸ |          4 | 317-nav-insert                                                 \n⠦ |          7 | 317-nav-insert                                                 \n⠋ |         11 | 317-nav-insert                                                 \n⠴ |         16 | 317-nav-insert                                                 \n⠏ |         20 | 317-nav-insert                                                 \n⠹ |         23 | 317-nav-insert                                                 \n⠸ |         24 | 317-nav-insert                                                 \n✔ |         27 | 317-nav-insert [7.3s]\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 7.3 s\n\n[ FAIL 0 | WARN 0 | SKIP 0 | PASS 27 ]\n\nStopping tests for app: 317-nav-insert\n###"},{"app_name":"318-navbar-colors","status":"pass","result":"\n###\nRunning tests for app: 318-navbar-colors\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | 318-navbar-colors                                              \n⠋ |          1 | 318-navbar-colors                                              \n✔ |      1   1 | 318-navbar-colors\n\n══ Results ═════════════════════════════════════════════════════════════════════\n── Skipped tests (1) ───────────────────────────────────────────────────────────\n• Only performing screenshot tests on macOS with r-release. (1):\n  'test-318-navbar-colors.R:16:3'\n\n[ FAIL 0 | WARN 0 | SKIP 1 | PASS 1 ]\n\nStopping tests for app: 318-navbar-colors\n###"},{"app_name":"900-text-jster","status":"fail","result":"\n###\nRunning tests for app: 900-text-jster\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 900-text-jster\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:45036/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 900-text-jster\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/900-text-jster\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x1130e1850> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 900-text-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/900-text-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 900-text-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/900-text-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 900-text-jster\n###"},{"app_name":"901-button-jster","status":"fail","result":"\n###\nRunning tests for app: 901-button-jster\n\nLoading required package: shiny\nLoading required package: testthat\n✔ | F W  S  OK | Context\n\n⠏ |          0 | shinyjster                                                     shinyjster - starting app: 901-button-jster\nRunning java -jar \\\n  '/Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar' \\\n  chrome 1200x1200 'http://127.0.0.1:6130/?shinyjster=1' 120 --headless\npxjava - SLF4J(W): No SLF4J providers were found.\npxjava - SLF4J(W): Defaulting to no-operation (NOP) logger implementation\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#noProviders for further details.\npxjava - SLF4J(W): Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\npxjava - SLF4J(W): Ignoring binding found at [jar:file:/Users/runner/Library/Application%20Support/R/shinycoreci/R-4_3_3/shinyjster/selenium/selenium.jar!/org/slf4j/impl/StaticLoggerBinder.class]\npxjava - SLF4J(W): See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.\npxjava - Exception in thread \"main\" java.lang.reflect.InvocationTargetException\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:74)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\npxjava - \tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\npxjava - \tat com.rstudio.seleniumRunner.MainKt.main(Main.kt:73)\npxjava - Caused by: org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 133\npxjava - Current browser version is 132.0.6834.83 with binary path /Applications/Google Chrome for Testing.app/Contents/MacOS/Google Chrome for Testing \npxjava - Host info: host: 'Mac-1740632191313.local', ip: 'fe80:0:0:0:10d5:20cb:bc6f:eede%en0'\npxjava - Build info: version: '4.29.0', revision: '5fc1ec94cb'\npxjava - System info: os.name: 'Mac OS X', os.arch: 'aarch64', os.version: '14.7.2', java.version: '21.0.5'\npxjava - Driver info: org.openqa.selenium.chrome.ChromeDriver\npxjava - Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--headless], extensions: []}}]}]\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)\npxjava - \tat org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)\npxjava - \tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)\npxjava - \tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:245)\npxjava - \tat org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)\npxjava - \tat org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:110)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:83)\npxjava - \tat org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:72)\npxjava - \tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\npxjava - \t... 3 more\npxjava - Selenium Processx closed\nOutput:\nshinyjster - stopping app: 901-button-jster\n\n⠋ |          1 | shinyjster                                                     List of 4\n $ appDir     : chr \"/Users/runner/work/shinycoreci/shinycoreci/inst/apps/901-button-jster\"\n $ successful : logi FALSE\n $ returnValue:List of 1\n  ..$ :List of 2\n  .. ..$ message: chr \"Browser process exited with a non-zero status before Shiny closed. Status: 1\"\n  .. ..$ call   : language (function ()  { ...\n  .. ..- attr(*, \"class\")= chr [1:3] \"simpleError\" \"error\" \"condition\"\n  .. ..- attr(*, \"stack.trace\")=Dotted pair list of 95\n  .. .. ..$ : language base::tryCatch(base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language base::withCallingHandlers({     NULL ...\n  .. .. ..$ : language base::saveRDS(base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/| __truncated__ ...\n  .. .. ..$ : language base::do.call(base::do.call, base::c(base::readRDS(\"/var/folders/2s/h6hvv9ps03xgz_krkkstvq_r0000gn/T//RtmppZVQvV/| __truncated__ ...\n  .. .. ..$ : language (function (what, args, quote = FALSE, envir = parent.frame())  { ...\n  .. .. ..$ : language (function (app_path_)  { ...\n  .. .. ..$ : language withr::with_envvar(list(NOT_CRAN = \"true\"), {     message(\"\\n###\\nRunning tests for app: \", basename(app_path_), \"\\n\") ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language shiny::runTests(appDir = app_path_, assert = FALSE)\n  .. .. ..$ : language do.call(rbind, lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language lapply(runners, function(r) {     pass <- FALSE ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     env <- new.env(parent = renv) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withr::with_dir(testsDir, {     ret <- sourceUTF8(r, envir = env) ...\n  .. .. ..$ : language force(code)\n  .. .. ..$ : language sourceUTF8(r, envir = env)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language eval(exprs, envir)\n  .. .. ..$ : language ..stacktraceon..({     shinytest2::test_app() ...\n  .. .. ..$ : language shinytest2::test_app()\n  .. .. ..$ : language testthat::test_dir(path = fs::path(app_dir, \"tests\", \"testthat\"), reporter = reporter,      stop_on_failure = sto| __truncated__\n  .. .. ..$ : language test_files(test_dir = path, test_paths = test_paths, test_package = package,      reporter = reporter, load_helpe| __truncated__ ...\n  .. .. ..$ : language test_files_serial(test_dir = test_dir, test_package = test_package, test_paths = test_paths,      load_helpers = | __truncated__ ...\n  .. .. ..$ : language with_reporter(reporters$multi, lapply(test_paths, test_one_file, env = env,      desc = desc, error_call = error_call))\n  .. .. ..$ : language tryCatch(code, testthat_abort_reporter = function(cnd) {     cat(conditionMessage(cnd), \"\\n\") ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language lapply(test_paths, test_one_file, env = env, desc = desc, error_call = error_call)\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language source_file(path, env = env(env), desc = desc, error_call = error_call)\n  .. .. ..$ : language test_code(test = NULL, code = exprs, env = env, reporter = get_reporter() %||%      StopReporter$new())\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language shinyjster::testthat_shinyjster()\n  .. .. .. ..- attr(*, \"srcref\")= 'srcref' int [1:8] 1 1 1 33 1 33 1 1\n  .. .. .. .. ..- attr(*, \"srcfile\")=Classes 'srcfilecopy', 'srcfile' <environment: 0x154d28a50> \n  .. .. ..$ : language lapply(browsers, function(browser) {     test_name <- paste0(name, browser, suffix) ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language testthat::test_that(test_name, {     if (browser == \"edge\")  ...\n  .. .. ..$ : language test_code(desc, code, env = parent.frame(), reporter = reporter)\n  .. .. ..$ : language tryCatch(withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(tryCatchList(expr, names[-nh], parentenv, handlers[-nh]), names[nh],      parentenv, handlers[[nh]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language tryCatchList(expr, names[-nh], parentenv, handlers[-nh])\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language withCallingHandlers({     eval(code, test_env) ...\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language eval(code, test_env)\n  .. .. ..$ : language test_jster(apps = app_dir, browsers = browser_func, type = \"lapply\")\n  .. .. ..$ : language lapply(browsers, function(browser_fn) {     ret_list <- lapply(apps, function(app) { ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language lapply(apps, function(app) {     tryCatch({ ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language tryCatch({     run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,  ...\n  .. .. ..$ : language tryCatchList(expr, classes, parentenv, handlers)\n  .. .. ..$ : language tryCatchOne(expr, names, parentenv, handlers[[1L]])\n  .. .. ..$ : language doTryCatch(return(expr), name, parentenv, handler)\n  .. .. ..$ : language run_jster_apps(apps = app, browser = browser_fn, host = host, port = port,      type = type)\n  .. .. ..$ : language run_jster_apps_lapply(apps, port = port, host = host, browser = browser)\n  .. .. ..$ : language lapply(apps, function(app) {     cat(\"shinyjster - \", \"starting app: \", basename(app), \"\\n\", sep = \"\") ...\n  .. .. ..$ : language FUN(X[[i]], ...)\n  .. .. ..$ : language run_jster(app, port = port, host = host, browser = browser)\n  .. .. ..$ : language shiny::runApp(appDir, port = port, host = host, launch.browser = FALSE)\n  .. .. ..$ : language ..stacktraceoff..(captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language captureStackTraces({     while (!.globals$stopped) { ...\n  .. .. ..$ : language promises::with_promise_domain(createStackTracePromiseDomain(), expr)\n  .. .. ..$ : language domain$wrapSync(expr)\n  .. .. ..$ : language withCallingHandlers(expr, error = doCaptureStack)\n  .. .. ..$ : language ..stacktracefloor..(serviceApp())\n  .. .. ..$ : language serviceApp()\n  .. .. ..$ : language service(timeout)\n  .. .. ..$ : language run_now(timeoutMs/1000, all = FALSE)\n  .. .. ..$ : language execCallbacks(timeoutSecs, all, loop$id)\n  .. .. ..$ : language (function ()  { ...\n  .. .. ..$ : language stop(\"Browser process exited with a non-zero status before Shiny closed. Status: \",      proc$get_exit_status())\n  .. .. ..$ : language .handleSimpleError(function (e)  { ...\n  .. .. ..$ : language h(simpleError(msg, call))\n  .. .. ..- attr(*, \"parents\")= int [1:95] 0 1 2 3 2 5 6 0 0 0 ...\n  .. .. ..- attr(*, \"shiny.stack.digest\")= chr \"7a7f0313b27a6b3e2f2c524703ace48c\"\n $ browser    : chr \"chrome\"\n\n✖ | 1    2   2 | shinyjster [10.1s]\n────────────────────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 901-button-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/901-button-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n────────────────────────────────────────────────────────────────────────────────\n\n══ Results ═════════════════════════════════════════════════════════════════════\nDuration: 10.1 s\n\n── Skipped tests (2) ───────────────────────────────────────────────────────────\n• Not testing Edge browser (1): 'test-shinyjster.R:1:1'\n• Not testing Firefox on macOS (1): 'test-shinyjster.R:1:1'\n\n── Failed tests ────────────────────────────────────────────────────────────────\nError ('test-shinyjster.R:1:1'): 901-button-jster - shinyjster - chrome\nError in `assert_jster(ret)`: \nshinyjster - Failing apps:\nshinyjster - * /Users/runner/work/shinycoreci/shinycoreci/inst/apps/901-button-jster - chrome\nBacktrace:\n    ▆\n 1. └─shinyjster::test_jster(...)\n 2.   └─shinyjster::assert_jster(ret)\n\n[ FAIL 1 | WARN 0 | SKIP 2 | PASS 2 ]\nError in testthat.R\nError: Test failures\n\n\nStopping tests for app: 901-button-jster\n###"}],"platform":"mac","r_version":"4.3","session":{"version":"R version 4.3.3 (2024-02-29)","os":"macOS Sonoma 14.7.2","system":"aarch64, darwin20","ui":"X11","language":"(EN)","collate":"en_US.UTF-8","ctype":"en_US.UTF-8","tz":"UTC","date":"2025-02-27","pandoc":"3.1.11 @ /usr/local/bin/pandoc","quarto":"NA"},"gha_image_version":"20250120.774","sys_info":"── Chrome Info ─────────────────────────────────────────────────────────────────\n---- {chromote} ----\n   System: aarch64-apple-darwin20\nR version: R version 4.3.3 (2024-02-29)\n chromote: 0.4.0.9000\n\n---- Chrome ----\n   Path: /Applications/Google Chrome.app/Contents/MacOS/Google Chrome\nVersion: Google Chrome 133.0.6943.128\n   Args: --headless --no-sandbox --disable-dev-shm-usage\n         --force-color-profile=srgb --disable-extensions --mute-audio\n── Session info ────────────────────────────────────────────────────────────────\n setting   value\n gha_image 20250120.774\n version   R version 4.3.3 (2024-02-29)\n os        macOS Sonoma 14.7.2\n system    aarch64, darwin20\n ui        X11\n language  (EN)\n collate   en_US.UTF-8\n ctype     en_US.UTF-8\n tz        UTC\n date      2025-02-27\n pandoc    3.1.11 @ /usr/local/bin/pandoc\n quarto    NA\n── Packages ────────────────────────────────────────────────────────────────────\n ! package           * version     date (UTC) lib source\n   askpass             1.2.1       2024-10-04 [1] CRAN (R 4.3.3)\n   assertthat          0.2.1       2019-03-21 [1] CRAN (R 4.3.3)\n   backports           1.5.0       2024-05-23 [1] CRAN (R 4.3.3)\n   base64enc           0.1-3       2015-07-28 [1] CRAN (R 4.3.3)\n   BH                  1.87.0-1    2024-12-17 [1] CRAN (R 4.3.3)\n   bigD                0.3.0       2024-11-08 [1] CRAN (R 4.3.3)\n   bit                 4.5.0.1     2024-12-03 [1] CRAN (R 4.3.3)\n   bit64               4.6.0-1     2025-01-16 [1] CRAN (R 4.3.3)\n   bitops              1.0-9       2024-10-03 [1] CRAN (R 4.3.3)\n   blob                1.2.4       2023-03-17 [1] CRAN (R 4.3.3)\n   boot                1.3-29      2024-02-19 [4] CRAN (R 4.3.3)\n   brio                1.1.5       2024-04-24 [1] CRAN (R 4.3.3)\n   broom               1.0.7       2024-09-26 [1] CRAN (R 4.3.3)\n   bsicons             0.1.2.9000  2025-01-31 [1] https://p~\n   bslib               0.9.0.9000  2025-02-18 [1] https://p~\n   cachem              1.1.0       2025-02-10 [1] https://p~\n   Cairo               1.6-2       2023-11-28 [1] CRAN (R 4.3.3)\n P callr               3.7.6       2024-03-25 [2] CRAN (R 4.3.3)\n   checkmate           2.3.2       2024-07-29 [1] CRAN (R 4.3.3)\n   chromote            0.4.0.9000  2025-02-20 [1] https://p~\n   class               7.3-22      2023-05-03 [4] CRAN (R 4.3.3)\n P cli                 3.6.4       2025-02-13 [2] CRAN (R 4.3.3)\n   clipr               0.8.0       2022-02-22 [1] CRAN (R 4.3.3)\n   cluster             2.1.6       2023-12-01 [4] CRAN (R 4.3.3)\n   codetools           0.2-19      2023-02-01 [4] CRAN (R 4.3.3)\n   colorspace          2.1-1       2024-07-26 [1] CRAN (R 4.3.3)\n   commonmark          1.9.2       2024-10-04 [1] CRAN (R 4.3.3)\n   cpp11               0.5.1       2024-12-04 [1] CRAN (R 4.3.3)\n P crayon              1.5.3       2024-06-20 [2] CRAN (R 4.3.3)\n   crosstalk           1.2.1.9000  2025-02-08 [1] https://p~\n   curl                6.2.1       2025-02-19 [1] CRAN (R 4.3.3)\n   data.table          1.17.0      2025-02-22 [1] CRAN (R 4.3.3)\n   DBI                 1.2.3       2024-06-02 [1] CRAN (R 4.3.3)\n   dbplyr              2.5.0       2024-03-19 [1] CRAN (R 4.3.1)\n   debugme             1.2.0       2024-04-25 [2] CRAN (R 4.3.3)\n   desc                1.4.3       2023-12-10 [1] CRAN (R 4.3.3)\n   DiagrammeR          1.0.11      2024-02-02 [1] CRAN (R 4.3.1)\n   diffobj             0.3.5       2021-10-05 [1] CRAN (R 4.3.3)\n   digest              0.6.37      2024-08-19 [1] CRAN (R 4.3.3)\n   dplyr               1.1.4       2023-11-17 [1] CRAN (R 4.3.1)\n   DT                  0.33.3      2025-01-31 [1] https://p~\n   ellipsis            0.3.2       2021-04-29 [1] CRAN (R 4.3.3)\n   english             1.2-6       2021-08-21 [2] CRAN (R 4.3.3)\n   evaluate            1.0.3       2025-01-10 [1] CRAN (R 4.3.3)\n   fansi               1.0.6       2023-12-08 [1] CRAN (R 4.3.3)\n   farver              2.1.2       2024-05-13 [1] CRAN (R 4.3.3)\n   fastmap             1.2.0       2025-02-10 [1] https://p~\n   flexdashboard       0.6.2.9000  2025-02-25 [1] https://p~\n   fontawesome         0.5.3.9000  2025-02-14 [1] https://p~\n   foreign             0.8-86      2023-11-28 [4] CRAN (R 4.3.3)\n   fs                  1.6.5       2024-10-30 [1] CRAN (R 4.3.3)\n   future              1.34.0      2024-07-29 [1] CRAN (R 4.3.3)\n   generics            0.1.3       2022-07-05 [1] CRAN (R 4.3.3)\n   ggplot2             3.5.1       2024-04-23 [1] CRAN (R 4.3.1)\n   ggvis               0.4.9       2024-02-05 [1] CRAN (R 4.3.1)\n   globals             0.16.3      2024-03-08 [1] CRAN (R 4.3.3)\n P glue                1.8.0       2024-09-30 [2] CRAN (R 4.3.3)\n   gt                  0.11.1.9000 2025-02-25 [1] https://p~\n   gtable              0.3.6       2024-10-25 [1] CRAN (R 4.3.3)\n   highcharter         0.9.4       2022-01-03 [1] CRAN (R 4.3.0)\n   highr               0.11        2024-05-26 [1] CRAN (R 4.3.3)\n P hms                 1.1.3       2023-03-21 [2] CRAN (R 4.3.0)\n   htmltools           0.5.8.9000  2025-02-04 [1] https://p~\n   htmlwidgets         1.6.4.9000  2025-02-07 [1] https://p~\n   httpuv              1.6.15.9000 2025-02-16 [1] https://p~\n   httr                1.4.7       2023-08-15 [1] CRAN (R 4.3.0)\n   igraph              2.1.4       2025-01-23 [1] CRAN (R 4.3.3)\n   isoband             0.2.7       2022-12-20 [1] CRAN (R 4.3.3)\n   jquerylib           0.1.4       2021-04-26 [1] CRAN (R 4.3.3)\n P jsonlite            1.9.0       2025-02-19 [2] CRAN (R 4.3.3)\n   juicyjuice          0.1.0       2022-11-10 [1] CRAN (R 4.3.3)\n   KernSmooth          2.23-22     2023-07-10 [4] CRAN (R 4.3.3)\n   knitr               1.49        2024-11-08 [1] CRAN (R 4.3.3)\n   labeling            0.4.3       2023-08-29 [1] CRAN (R 4.3.3)\n   later               1.4.1.9000  2025-02-05 [1] https://p~\n   lattice             0.22-5      2023-10-24 [4] CRAN (R 4.3.3)\n   lazyeval            0.2.2       2019-03-15 [1] CRAN (R 4.3.3)\n   leaflet             2.2.2.9000  2025-02-03 [1] https://p~\n   leaflet.providers   2.0.0       2023-10-17 [1] CRAN (R 4.3.3)\n P lifecycle           1.0.4       2023-11-07 [2] CRAN (R 4.3.3)\n   listenv             0.9.1       2024-01-29 [1] CRAN (R 4.3.3)\n   lobstr              1.1.2       2022-06-22 [1] CRAN (R 4.3.3)\n   lorem               1.0.0       2023-03-09 [1] CRAN (R 4.3.0)\n   lubridate           1.9.4       2024-12-08 [1] CRAN (R 4.3.3)\n P magrittr            2.0.3       2022-03-30 [2] CRAN (R 4.3.3)\n   maps                3.4.2.1     2024-11-10 [1] CRAN (R 4.3.3)\n   markdown            1.13        2024-06-04 [1] CRAN (R 4.3.3)\n   MASS                7.3-60.0.1  2024-01-13 [4] CRAN (R 4.3.3)\n   Matrix              1.6-5       2024-01-11 [4] CRAN (R 4.3.3)\n   memoise             2.0.1       2021-11-26 [1] CRAN (R 4.3.3)\n   mgcv                1.9-1       2023-12-21 [4] CRAN (R 4.3.3)\n   mime                0.12        2021-09-28 [1] CRAN (R 4.3.3)\n   munsell             0.5.1       2024-04-01 [1] CRAN (R 4.3.3)\n   networkD3           0.4         2017-03-18 [1] CRAN (R 4.3.0)\n   nlme                3.1-164     2023-11-27 [4] CRAN (R 4.3.3)\n   NLP                 0.3-2       2024-11-20 [1] CRAN (R 4.3.3)\n   nnet                7.3-19      2023-05-03 [4] CRAN (R 4.3.3)\n   openssl             2.3.2       2025-02-03 [1] CRAN (R 4.3.3)\n   packrat             0.9.2       2023-09-05 [1] CRAN (R 4.3.3)\n   pak                 0.8.0       2025-02-19 [2] local\n   parallelly          1.42.0      2025-01-30 [1] CRAN (R 4.3.3)\n   parsedate           1.3.2       2024-12-09 [2] CRAN (R 4.3.3)\n P pillar              1.10.1      2025-01-07 [2] CRAN (R 4.3.3)\n   pingr               2.0.5       2024-12-12 [1] CRAN (R 4.3.3)\n   pkgbuild            1.4.6       2025-01-16 [1] CRAN (R 4.3.3)\n P pkgconfig           2.0.3       2019-09-22 [2] CRAN (R 4.3.3)\n   pkgload             1.4.0       2024-06-28 [1] CRAN (R 4.3.3)\n   PKI                 0.1-14      2024-06-15 [1] CRAN (R 4.3.3)\n   plogr               0.2.0       2018-03-25 [1] CRAN (R 4.3.3)\n   plotly              4.10.4.9000 2025-02-14 [1] https://p~\n   plyr                1.8.9       2023-10-02 [1] CRAN (R 4.3.3)\n   png                 0.1-8       2022-11-29 [1] CRAN (R 4.3.3)\n   praise              1.0.0       2015-08-11 [1] CRAN (R 4.3.3)\n P prettyunits         1.2.0       2023-09-24 [2] CRAN (R 4.3.3)\n P processx            3.8.6       2025-02-21 [2] CRAN (R 4.3.3)\n P progress            1.2.3       2023-12-06 [2] CRAN (R 4.3.1)\n   promises            1.3.2.9000  2025-02-11 [1] https://p~\n   pryr                0.1.6       2023-01-17 [1] CRAN (R 4.3.0)\n P ps                  1.9.0       2025-02-18 [2] CRAN (R 4.3.3)\n   purrr               1.0.4       2025-02-05 [1] CRAN (R 4.3.3)\n   quantmod            0.4.26      2024-02-14 [1] CRAN (R 4.3.3)\n   R.cache             0.16.0      2022-07-21 [1] CRAN (R 4.3.0)\n   R.methodsS3         1.8.2       2022-06-13 [1] CRAN (R 4.3.3)\n   R.oo                1.27.0      2024-11-01 [1] CRAN (R 4.3.3)\n   R.utils             2.13.0      2025-02-24 [1] CRAN (R 4.3.3)\n P R6                  2.6.1       2025-02-15 [2] CRAN (R 4.3.3)\n   ragg                1.3.3       2024-09-11 [1] CRAN (R 4.3.3)\n P rappdirs            0.3.3       2021-01-31 [2] CRAN (R 4.3.3)\n   raster              3.6-31      2025-01-16 [1] CRAN (R 4.3.3)\n   RColorBrewer        1.1-3       2022-04-03 [1] CRAN (R 4.3.3)\n   Rcpp                1.0.14      2025-01-12 [1] CRAN (R 4.3.3)\n   reactable           0.4.4       2023-03-12 [1] CRAN (R 4.3.0)\n   reactlog            1.1.1       2025-01-31 [1] https://p~\n   reactR              0.6.1       2024-09-14 [1] CRAN (R 4.3.3)\n   readr               2.1.5       2024-01-10 [1] CRAN (R 4.3.1)\n   rematch             2.0.0       2023-08-30 [2] CRAN (R 4.3.3)\n   renv                1.1.1       2025-02-07 [1] CRAN (R 4.3.3)\n   reshape2            1.4.4       2020-04-09 [1] CRAN (R 4.3.0)\n   rjson               0.2.23      2024-09-16 [1] CRAN (R 4.3.3)\n P rlang               1.1.5       2025-01-17 [2] CRAN (R 4.3.3)\n   rlist               0.4.6.2     2021-09-03 [1] CRAN (R 4.3.3)\n   rmarkdown           2.29        2024-11-04 [1] CRAN (R 4.3.3)\n   rpart               4.1.23      2023-12-05 [4] CRAN (R 4.3.3)\n P rprojroot           2.0.4       2023-11-05 [2] CRAN (R 4.3.3)\n   rsconnect           1.3.4       2025-01-22 [1] CRAN (R 4.3.3)\n   RSQLite             2.3.9       2024-12-03 [1] CRAN (R 4.3.3)\n   rstudioapi          0.17.1      2024-10-22 [1] CRAN (R 4.3.3)\n   rversions           2.1.2       2022-08-31 [1] CRAN (R 4.3.3)\n   sass                0.4.9.9000  2025-02-18 [1] https://p~\n   scales              1.3.0       2023-11-28 [1] CRAN (R 4.3.3)\n   sessioninfo         1.2.3       2025-02-05 [1] CRAN (R 4.3.3)\n   shiny               1.10.0.9000 2025-02-26 [1] https://p~\n   shinyAce            0.4.4       2025-02-03 [1] CRAN (R 4.3.3)\n P shinycoreci         0.0.0.9009  2025-02-24 [2] https://p~\n   shinydashboard      0.7.2       2021-09-30 [1] CRAN (R 4.3.0)\n   shinyjs             2.1.0       2021-12-23 [1] CRAN (R 4.3.0)\n   shinyjster          0.0.0.9010  2025-02-26 [1] https://p~\n   shinymeta           0.2.1       2025-02-18 [1] https://p~\n   shinytest           1.6.1       2024-05-30 [2] CRAN (R 4.3.3)\n   shinytest2          0.3.2.9000  2025-02-10 [1] https://p~\n   shinythemes         1.2.0       2025-01-31 [1] https://p~\n   shinyvalidate       0.1.3.9000  2025-02-01 [1] https://p~\n   showimage           1.0.0       2018-01-24 [2] CRAN (R 4.3.3)\n   showtext            0.9-7       2024-03-02 [1] CRAN (R 4.3.3)\n   showtextdb          3.0         2020-06-04 [1] CRAN (R 4.3.3)\n   slam                0.1-55      2024-11-13 [1] CRAN (R 4.3.3)\n   sourcetools         0.1.7-1     2023-02-01 [1] CRAN (R 4.3.3)\n   sp                  2.1-4       2024-04-30 [1] CRAN (R 4.3.3)\n   spatial             7.3-17      2023-07-20 [4] CRAN (R 4.3.3)\n   stringi             1.8.4       2024-05-06 [1] CRAN (R 4.3.3)\n   stringr             1.5.1       2023-11-14 [1] CRAN (R 4.3.1)\n   styler              1.10.3      2024-04-07 [1] CRAN (R 4.3.1)\n   survival            3.5-8       2024-02-14 [4] CRAN (R 4.3.3)\n   sys                 3.4.3       2024-10-04 [1] CRAN (R 4.3.3)\n   sysfonts            0.8.9       2024-03-02 [1] CRAN (R 4.3.3)\n   systemfonts         1.1.0       2024-05-15 [1] CRAN (R 4.3.3)\n   terra               1.8-29      2025-02-26 [1] CRAN (R 4.3.3)\n   testthat            3.2.3       2025-01-13 [1] CRAN (R 4.3.3)\n   textshaping         1.0.0       2025-01-20 [1] CRAN (R 4.3.3)\n   thematic            0.1.6.9000  2025-02-24 [1] https://p~\n P tibble              3.2.1       2023-03-20 [2] CRAN (R 4.3.0)\n   tidyr               1.3.1       2024-01-24 [1] CRAN (R 4.3.1)\n   tidyselect          1.2.1       2024-03-11 [1] CRAN (R 4.3.1)\n   timechange          0.3.0       2024-01-18 [1] CRAN (R 4.3.3)\n   tinytex             0.55        2025-02-19 [1] CRAN (R 4.3.3)\n   tm                  0.7-16      2025-02-19 [1] CRAN (R 4.3.3)\n   TTR                 0.24.4      2023-11-28 [1] CRAN (R 4.3.3)\n   tzdb                0.4.0       2023-05-12 [1] CRAN (R 4.3.3)\n   utf8                1.2.4       2023-10-22 [1] CRAN (R 4.3.3)\n   V8                  6.0.1       2025-02-02 [1] CRAN (R 4.3.3)\n P vctrs               0.6.5       2023-12-01 [2] CRAN (R 4.3.3)\n   viridisLite         0.4.2       2023-05-02 [1] CRAN (R 4.3.3)\n   visNetwork          2.1.2       2022-09-29 [1] CRAN (R 4.3.0)\n   vroom               1.6.5       2023-12-05 [1] CRAN (R 4.3.1)\n   waldo               0.6.1       2024-11-07 [1] CRAN (R 4.3.3)\n   webdriver           1.0.6       2021-01-12 [2] CRAN (R 4.3.0)\n   websocket           1.4.2       2025-02-15 [1] https://p~\n P withr               3.0.2       2024-10-28 [2] CRAN (R 4.3.3)\n   wordcloud           2.6         2018-08-24 [1] CRAN (R 4.3.3)\n   xfun                0.51        2025-02-19 [1] CRAN (R 4.3.3)\n   XML                 3.99-0.18   2025-01-01 [1] CRAN (R 4.3.3)\n   xml2                1.3.6       2023-12-04 [1] CRAN (R 4.3.3)\n   xtable              1.8-4       2019-04-21 [1] CRAN (R 4.3.3)\n   xts                 0.14.1      2024-10-15 [1] CRAN (R 4.3.3)\n   yaml                2.3.10      2024-07-26 [1] CRAN (R 4.3.3)\n   zip                 2.3.2       2025-02-01 [1] CRAN (R 4.3.3)\n   zoo                 1.8-13      2025-02-22 [1] CRAN (R 4.3.3)\n\n [1] /Users/runner/Library/Application Support/R/shinycoreci/R-4_3_3\n [2] /Users/runner/work/_temp/Library\n [3] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/site-library\n [4] /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/library\n\n P ── Loaded and on-disk path mismatch.","branch_name":"main","branch_sha":"33c0862","pr_number":"","username":"${GITHUB_ACTOR}","gha_branch_name":"gha-33c0862-2025_02_27_05_08-4.3-macOS","version":2}